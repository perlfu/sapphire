/*
 * Unit test script for phantom reference types
 */

void main() {
  setOption("fullHeapSystemGC=true");

  object o = alloc(0,0,false);
  object p = alloc(1,0,false);
  p.object[0] = o;
  
  phantomref ref = phantomRef(o);
  
  object o_ref = getPhantomReferent(ref);
  
  assert (o_ref == o, "Reference has not created its referent");
  o_ref = null;
  
  gc();
  o_ref = getPhantomReferent(ref);
  assert (o_ref == o, "Reference has lost its referent after a Forced GC");
  
  o = null;
  o_ref = null;
  gc();
  o_ref = getPhantomReferent(ref);
  assert (o_ref != null, "Reference has lost its transitively reachable referent after a Forced GC");
  
  p = null;
  o_ref = null;
  gc();
  o_ref = getPhantomReferent(ref);
  assert (o_ref == o, "Reference has not cleared its referent");
  
  print("Reference check OK");
}