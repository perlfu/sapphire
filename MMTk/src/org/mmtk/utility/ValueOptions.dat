#
# (C) Copyright IBM Corp. 2003, 2004
#
DECL 
# Structure of DECL TAG FULL_NAME TYPE DEFAULT_VALUE {SHORT_NAME {DISPLAY_UNIT} {INPUT_UNIT (for M)}}
# TAG: E = Enumeration, V = Value, M = Memory size (treated as V right now)
# TYPE: byte, int, String, double, 
# DISPLAY_UNIT: an arbitrary string
# INPUT_UNIT: MB, KB		(not implemented yet)
DESCRIP  
FILTER
# body of function to filter/check/process the new value
ENUMS
#Structure of ENUMS "ITEM_NAME QUERY_NAME CMD_NAME"

V verbose int 0 
GC verbosity level
if (val < 0) fail("Unreasonable verbosity level ", val);


M minNurseryPages int BasePlan.DEFAULT_MIN_NURSERY fixedNursery pages MB
Fix the minimum and maximum size of the nursery to this value (MB)
int val2 = Conversions.bytesToPagesUp(val<<20); \
maxNurseryPages = val2; \
if (val <= 0) fail("Unreasonable nursery size ", val); \
val = val2;


V maxNurseryPages int BasePlan.DEFAULT_MAX_NURSERY boundedNursery pages MB
Bound the maximum size of the nursery to this value (MB)
int val2 = Conversions.bytesToPagesUp(val<<20); \
if (val <= 0) fail("Unreasonable nursery size ", val); \
val = val2;


V metaDataPages int 4096 metaDataLimit pages KB
Trigger a GC if the meta data volume grows to this limit (KB)
int val2 = Conversions.bytesToPagesUp(val<<10); \
if (val <= 0) fail("Unreasonable metadata limit ", val); \
val = val2;


V cycleMetaDataPages int 512 cycleMetaDataLimit pages KB
Trigger cycle detection if the meta data volume grows to this limit (KB)
int val2 = Conversions.bytesToPagesUp(val<<10); \
if (val <= 0) fail("Unreasonable cycle metadata limit ", val); \
val = val2;


V cycleDetectionPages int 512 cycleTriggerThreshold pages KB
Trigger cycle detection if the space available falls below this threshold (KB)
int val2 = Conversions.bytesToPagesUp(val<<10); \
if (val <= 0) fail("Unreasonable cycle detection limit ", val); \
val = val2;


V cycleFilterPages int 1024 cycleFilterThreshold pages KB
Trigger cycle buffer filtering if the space available falls below this threshold (KB)
int val2 = Conversions.bytesToPagesUp(val<<10); \
if (val <= 0) fail("Unreasonable cycle filter limit ", val); \
val = val2;


V gcTimeCap int 2000 timeCap milliseconds
Try to limit reference counting collections to this time cap (ms)
if (val <= 0) fail("Unreasonable time cap ", val);


V stressPages int MAX_INT stressFactor pages
Log 2 of the frequency (in bytes) with which to force stress test collections
int val2 = Conversions.bytesToPagesUp(1<<val); \
if (val2 <= Plan.DEFAULT_POLL_FREQUENCY) fail("Unreasonable stress factor, must be at least equal to the log of the plan's poll frequency", val); \
val = val2;


V traceFrequencyLog int 0x3fffffff traceRate bytes
The granularity of the trace being produced.  By default, the trace has the maximum possible granularity.  (Log 2 of the num of bytes)
int val2 = (val < LOG_BYTES_IN_ADDRESS)? 0 : val - LOG_BYTES_IN_ADDRESS; \
val = 1<<val2;


V gcspyPort int 0
Port number for GCSpy server to connect with visualiser
if (val <= 0) fail("Unreasonable gcspy port ", val);


V gcspyTilesize int 131072 gcspyTilesize bytes KB
GCSpy tile size in KB
if (val <= 0) fail("Unreasonable gcspy tilesize ", val); \
val <<= 10;


E sampleEnum byte SAMPLE_FOO
A dummy example of enumerations in JMTk
// This line is the filter method body; unused for enums!
"SAMPLE_FOO sampFoo foo" \
"SAMPLE_BAR sampBar bar" \
"SAMPLE_BAZ sampBaz baz"
