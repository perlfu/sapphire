<!--
 ~  This file is part of the Jikes RVM project (http://jikesrvm.org).
 ~
 ~  This file is licensed to You under the Eclipse Public License (EPL);
 ~  You may not use this file except in compliance with the License. You
 ~  may obtain a copy of the License at
 ~
 ~      http://www.opensource.org/licenses/eclipse-1.0.php
 ~
 ~  See the COPYRIGHT.txt file distributed with this work for information
 ~  regarding copyright ownership.
 -->
<project name="harmony" default="build" basedir=".">

  <import file="base.xml"/>
  <property file="${components.file}"/>

  <property name="harmony.version" value="5.0M10"/>
  <property name="harmony.svn.revision" value="782693"/>
  <property name="harmony.base.url" value="http://svn.apache.org/repos/asf/harmony/enhanced/java/trunk/classlib"/>
  <property name="harmony.description" value="Apache Harmony class libraries"/>
  <property name="harmony.patchlevel" value="2"/>
  <property name="harmony.component.dir" location="${components.dir}/harmony"/>
  <property name="harmony.package.dir" value="${harmony.component.dir}/${harmony.version}p${harmony.patchlevel}"/>
  <property name="harmony.dir" value="${harmony.package.dir}/harmony"/>

  <!-- **************************************************************************** -->
  <!-- *               Downloading and installing Harmony component               * -->
  <!-- **************************************************************************** -->

  <!-- init properties for downloading harmony from svn or from web -->
  <target name="init-harmony-properties" depends="prepare-ant-tasks">
    <!-- <property name="harmony.from-web" value="true"/> -->
    <property name="harmony.from-svn" value="true"/>
    <!-- <property name="harmony.from-local" value="true"/> -->
  </target>

  <!-- download harmony from svn -->
  <target name="get-harmony-from-svn" depends="init-harmony-properties,set-svn-exe" if="harmony.from-svn">
    <exec executable="${svn.exe}">
      <arg value="checkout"/>
      <arg value="${harmony.base.url}"/>
      <arg value="-r"/>
      <arg value="${harmony.svn.revision}"/>
      <arg value="${harmony.dir}"/>
    </exec>
  </target>

  <!-- copy harmony from local folder -->
  <target name="get-harmony-from-local" depends="init-harmony-properties" if="harmony.from-local">
    <copy todir="${harmony.dir}">
      <fileset dir="${harmony.local.dir}">
	<exclude name="**/.svn/**" />
      </fileset>
    </copy>
  </target>

  <!-- download harmony from web -->
  <target name="get-harmony-from-web" depends="init-harmony-properties" if="harmony.from-web">
    <fail message="Downloading Harmony from the web is not yet supported"/>
  </target>

  <target name="fetch" depends="get-harmony-from-web,get-harmony-from-svn,get-harmony-from-local"/>


  <!-- *************************************************************************** -->
  <!--                           Patch Harmony                                     -->
  <!-- *************************************************************************** -->

  <!-- Patches against SVN head -->
  <target name="patch-harmony-cvs" depends="fetch" if="harmony.from-svn">
    <patch patchfile="${components.patch.dir}/harmony-svn.RVM-358-01.patch"
           dir="${harmony.dir}" strip="0"/>
    <patch patchfile="${components.patch.dir}/harmony-svn.RVM-925.patch"
             dir="${harmony.dir}" strip="0"/>
  </target>

  <!-- Patches against local copy -->
  <target name="patch-harmony-local" depends="fetch" if="harmony.from-local">
    <patch patchfile="${components.patch.dir}/harmony-svn.RVM-358-01.patch"
           dir="${harmony.dir}" strip="0"/>
  <patch patchfile="${components.patch.dir}/harmony-svn.RVM-925.patch"
           dir="${harmony.dir}" strip="0"/>
  </target>

  <!-- Patches against web -->
  <target name="patch-harmony-web" depends="fetch" if="harmony.from-web">
  </target>

  <target name="patch" depends="patch-harmony-web,patch-harmony-cvs,patch-harmony-local"/>

  <!-- *************************************************************************** -->
  <!--                           Build Harmony                                     -->
  <!-- *************************************************************************** -->
  <macrodef name="buildHarmony">
    <attribute name="target"/>
    <sequential>
      <if>
        <conditions>
          <isset property="harmony.arch"/>
        </conditions>
        <sequential>
          <exec executable="ant" dir="${harmony.dir}" failonerror="true">
            <env key="ASFLAGS" value="${harmony.asflags}"/>
            <env key="LDFLAGS" value="${harmony.ldflags}"/>
            <env key="CFLAGS" value="${harmony.cflags}"/>
            <env key="CXXFLAGS" value="${harmony.cxxflags}"/>
            <arg value="-Dhy.javac.compiler=modern"/>
            <arg value="-Dhy.arch=${harmony.arch}"/>
            <arg value="@{target}"/>
          </exec>
        </sequential>
      </if>
      <if>
        <conditions>
          <not>
            <isset property="harmony.arch"/>
          </not>
        </conditions>
        <sequential>
          <subant buildpath="${harmony.dir}" target="@{target}">
            <property name="hy.javac.compiler" value="modern"/>
          </subant>
        </sequential>
      </if>
    </sequential>
  </macrodef>


  <target name="build" depends="fetch,patch" description="Download Harmony and build.">
    <!-- fetch harmony dependencies -->
    <buildHarmony target="fetch-depends"/>

    <!-- build harmony in harmony.dir -->
    <buildHarmony target="build"/>

    <!-- copy to a build target directory -->
    <condition property="library.suffix" value=".so">
      <equals arg1="${target.os}" arg2="Linux"/>
    </condition>
    <condition property="library.suffix" value=".so.0">
      <equals arg1="${target.os}" arg2="AIX"/>
    </condition>
    <condition property="library.suffix" value=".dylib">
      <equals arg1="${target.os}" arg2="OSX"/>
    </condition>
    <condition property="library.suffix" value=".so">
      <equals arg1="${target.os}" arg2="Solaris"/>
    </condition>
    <copy todir="${harmony.package.dir}/${target.name}/lib" flatten="true">
      <fileset dir="${harmony.dir}">
        <include name="deploy/jdk/jre/lib/**/*.jar"/>
        <include name="deploy/jdk/jre/lib/**/*.properties"/>
      </fileset>
    </copy>
    <copy todir="${harmony.package.dir}/${target.name}/lib" flatten="true">
      <regexpmapper from="^(.*${file.separator})lib([^${file.separator}]+)${library.suffix}$$"
                    to="${target.dll-prefix}\2${target.jni-suffix}"/>
      <fileset dir="${harmony.dir}">
        <include name="deploy/jdk/jre/bin/*${library.suffix}"/>
        <include name="deploy/lib/*${library.suffix}"/>
      </fileset>
    </copy>
    <writeComponentConstants dir="${harmony.package.dir}/${target.name}/lib"/>
    <setComponentsConfig key="${target.name}.harmony.lib.dir" value="${harmony.package.dir}/${target.name}/lib"/>
    <setComponentsConfig key="harmony.include.dir" value="${harmony.dir}/deploy/include"/>
  </target>

  <!-- *************************************************************************** -->
  <!--              Ensure - Entry point from main build                           -->
  <!-- *************************************************************************** -->
  <target name="ensure" depends="prepare-ant-tasks">
    <ensureUptodate name="harmony" dir="${harmony.package.dir}/${target.name}/lib"/>
  </target>
</project>
