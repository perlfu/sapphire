--- java/util/AbstractMap.java	2010-04-27 16:31:20.000000000 +1000
+++ java/util/AbstractMap.java	2010-05-02 23:01:48.000000000 +1000
@@ -71,16 +71,16 @@
  */
 public abstract class AbstractMap<K, V> implements Map<K, V>
 {
-  /** 
+  /** 
    * A class containing an immutable key and value.  The
    * implementation of {@link Entry#setValue(V)} for this class
    * simply throws an {@link UnsupportedOperationException},
    * thus preventing changes being made.  This is useful when
    * a static thread-safe view of a map is required.
    *
-   * @since 1.6 
+   * @since 1.6 
    */
-  public static class SimpleImmutableEntry<K, V>
+  public static class SimpleImmutableEntry<K, V> extends SimpleEntry<K,V>
     implements Entry<K, V>, Serializable
   {
     /**
@@ -88,34 +88,22 @@
      */
     private static final long serialVersionUID = 7138329143949025153L;
 
-    K key;
-    V value;
-
     public SimpleImmutableEntry(K key, V value)
     {
-      this.key = key;
-      this.value = value;
+      super(key,value);
     }
 
     public SimpleImmutableEntry(Entry<? extends K, ? extends V> entry)
     {
-      this(entry.getKey(), entry.getValue());
-    }
-
-    public K getKey()
-    {
-      return key;
-    }
-
-    public V getValue()
-    {
-      return value;
+      super(entry);
     }
 
+    @Override
     public V setValue(V value)
     {
       throw new UnsupportedOperationException("setValue not supported on immutable entry");
     }
+
   }
 
 /** An "enum" of iterator types. */
