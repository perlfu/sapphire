-*-outline-*-
Jikes RVM NEWS -- history of significant changes

$Id$

TODO: Add copies of the old release notes to this file.

*Changes after Jikes RVM 2.3.4: future release notes
The following four sections of the document will one day be the
release notes for Jikes RVM following the 2.3.4 release.

*Highlights after the Jikes RVM 2.3.4 release
**Quick Compiler (missing from the original 2.3.4 release notes)
Release 2.3.4 marked the first public appearance 
of the "Quick" compiler for the PowerPC architecture targets.

The Quick compiler is supposed to be rather smarter than the Base 
compiler about register use without being nearly as complex as the Opt 
compiler.

Rather smarter means that stack and local variables are kept in 
registers if possible, not in memory.

Not nearly as complex means, for instance, that the Quick compiler code 
generator works in a single pass, with no intermediate representations. 
Right now the only additional optimizations are to remember if stack or 
local variable values are already in a temporary or work register and 
hence don't need to be loaded, and to postpone local variable stores 
until it becomes obvious that the value really needs to be written.

One purpose of the Quick compiler is to explore how close to the 
performance of the Opt compiler we can come by using just the most 
beneficial optimizations. Also, we hope to use it as a starting point 
for experimenting with other optimizations without having to deal with 
the implementation details of the Opt compiler and the complex 
interactions among the many optimizations performed by the Opt compiler.


*Other Notes after the Jikes RVM 2.3.4 release:
**The release notes are now in a file called NEWS instead of 
the old ReleaseNotes-<revision-number> files.  Further, NEWS
is an archive; it is intended to contain release notes for past
versions as well as the most recent release.


*Bug Fixes after the Jikes RVM 2.3.4 release:
*Internal Changes after the Jikes RVM 2.3.4 release:



*Jikes RVM 2.3.4 release notes sections:
THe following four sections of the document contain the Jikes RVM
2.3.4 release notes.  They are:
**Highlights
**Other Notes
**Bug Fixes
**Internal Changes

*Highlights of the Jikes RVM 2.3.4 release:

**We now run Eclipse 3.0
You can use Jikes RVM to run Eclipse 3.0; this lets you run a free
IDE with a free VM.

**The port to PowerPC64 is virtually complete.  There are a few fringe opt 
compiler bugs remaining, but functionality has advanced to the point where 
development and production images of Jikes RVM are passing almost all 
regression tests. 

**MMTk has been moved out of $RVM_ROOT/rvm/src/vm/memory managers to 
$RVM_ROOT/MMTk.  It has also been reorganized to have the directory structure
match its package structure and thus is "Eclipse-friendly."  MMTk's
option parsing has been rewritten.  There are other internal 
changes as well.

**Major revision of the object model. All objects (arrays and scalars) 
are now layed out in a "forwards" direction. This simplifies and enables
many common GC techniques (scannable heap; card-marking) at the cost of a 
slight performance hit on AIX/PowerPC due to the need to make some null checks
explicit. See VM_ObjectModel.java for more details. 

**XML parsing with Xalan
Jikes RVM can now be configured so it always uses the Xalan XML
parser.  See the configuration file variable XALAN_J_DIR.

**We have switched to GNU Classpath version 0.12.
Versions 0.10 and 0.11 can still be used, if you set appropriate
options in the configuration file, but we recommend Classpath 0.12.

**CPU hogging fixed
Jikes RVM used to busy-wait when it was idle, waiting for I/O or
timeouts.  It now sleeps properly, which is nice if you're trying
to do something else on your workstation at the same time that you're
using Jikes RVM.  This closes long-standing defect # 2046.

*Other notes on the Jikes RVM 2.3.4 release:
**The memory size options now all take sizes in bytes by default.  (INCOMPATIBLE CHANGE)
They used to use a mix of default units: Megabytes (Mebibytes),
Kilobytes (Kibibytes), and "Log 2 of the frequency (in bytes)".  They
now all default to bytes; please update any scripts you have
appropriately.  This affects -Xmx, -Xms, and the -X:gc:* options. 

**The MMAP_COPY_ON_WRITE feature now works on PowerPC/Linux and PowerPC/OSX.  
(This feature was discussed in the 2.3.3 release notes.)

**The AttachCurrentThread JNI function is now partly implemented;
it now works in the common case where a thread is already attached to the VM.

**RVM_BOOTCLASSPATH_APPEND is a new environment variable that Jikes RVM
will recognize when booting.  You can use it to add extensions to the
VM.  Set it just as you would set the CLASSPATH environment variable.

**Major re-implementation of AOS's feedback-directed inlining and the opt 
compiler's default inlining policy. Result is simpler code, lower
overhead profiling, and more effective inlining decisions. 

*Bug Fixes in the Jikes RVM 2.3.4 release:
**The JNI AttachCurrentThread function now returns proper error status if it
cannot complete properly.  It used to (incorrectly) always return
JNI_OK.
**Class.getResourceAsStream() and Class.getResource() would fail 
with a NullPointerException when invoked on a Class object that was
loaded by the Bootstrap Class Loader. 
**Defect #3601 is fixed -- java.lang.Thread no longer inherits from VM_Thread.
**Stack trace printing for trouble in the boot thread is fixed; 
it no longer inappropriately elides frames.

*Internal Changes in the Jikes RVM 2.3.4 relesae:
**The VM_Magic classes have been moved to the org.vmmagic namespace, 
and rationalized. Further work on refactoring magic usage (mainly in Jikes 
RVM as opposed to MMTk) is ongoing.

