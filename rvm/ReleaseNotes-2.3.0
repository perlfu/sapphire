This is release 2.3.0 of the Jikes RVM. 

There are a number of major changes and significant improvements in
overall system stability and functionality over Jikes RVM 2.2.2. 

Highlights of this release include:
 + Switched to classpath version 0.06
   - lots of improved function in classpath
   - fixes several critical defects in Jikes RVM
 + Build process:
   - ksh has been replaced with bash
   - improved robustness and error detection in all build tools
 + GC/Memory management:
   - MarkSweep and CopyMS Plans are considered stable
   - CopyMS is now recommended as the default memory manager
   - heapsize now dynamically grows/shrinks
   - implementation of soft, weak, and phantom references 
   - numerous bug fixes and performance improvements
   - numerous code cleanups from Robin Garner and Andrew Grey.
 + Simplified configuration of Jikes RVM
   - Added 4 logical configs to help new users pick a 'good' one
   - All builds with opt compiler use adaptive system
 + Baseline compiler is re-entrant; parallel baseline compilation enabled
 + Some progress on port to 64 bit PowerPC
    - Numerous code cleanups
    - More use of VM_Address, VM_Word, etc.
    - Complete reimplementation of syscalls (see VM_SysCall)
 + Includes 9 user contributions since 2.2.2;

Other notes:

We fixed the 587 Javadoc warnings in the source code. 

VM_Time.now replaced by VM_Time.cycles. Internal interval timing
should now be done using hardware cycle counters (VM_Time.cycles)
instead of getting the time of day. 

A number of other miscellaneous bugs in version 2.2.2
are fixed in the 2.3.0 release.  See the developerWorks bug 
tracking software tool and CVS history for details.


Expansions of some of the material above:

+ preprocessor documented, and more robust:

There were several enhancements to the Java preprocessor:

The preprocessor is now documented, both in the User's Guide and via a
--help option.  It is also a lot more robust than it used to be.
We wrote up-to-date documentation for the preprocessor.  We also fixed
some deficiencies where certain errors in using the preprocessor would
lead to silent failures.  The preprocessor was generating incorrect
exit status codes under some failure conditions; these are fixed.  All
buffer overflows are now caught and fixed.  All GCC warnings fixed in
the preprocessor.

The preprocessor now notices incorrect syntax (extra trailing
characters after a conditional) and correctly complains about it.

The preprocessor now handles failures and fatal signals by
conservatively deleting the output file in progress.  This keeps us
from having half-updated files sitting around.

+ improvements in build process to make it stop on errors:

Any error occurring during a build of Jikes RVM now cause the build
process to immediately abort.  We had, in the past, at least twice a
month received reports that a built RVM failed to work, where upon
investigation we discovered that the build process had encountered
errors earlier, and these earlier errors were the real source of the
problem.

+ Soft, weak, and phantom references

We now handle them the way the spec says, instead of just treating
soft and weak refs. as if they were regular (hard/strong) references.
This was a contribution from Chris Hoffman.

 + ksh => bash

Jikes RVM's build process is now entirely free of KSH.  This makes it
more convenient for Linux users to install the system.  
