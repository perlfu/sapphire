#! /bin/bash
#
# (C) Copyright IBM Corp. 2003
#
# $Id$
#
# Run Jikes RVM under the gdb debugger.
#
# The script handles passing command line arguments to the Jikes RVM
# executable and executing a standard gdb macro file that does some
# common setup tasks.
#
# @author Dave Grove
# @modified Steven Augart
#    Converted to Bash.

# Sanity checks
# What is our name?
# Bash internal shorthand that works like the "basename" command.
ME="${0##*/}"

# Where are we?
# Bash internal shorthand that works like the "dirname" command.
mydir="${0%/*}"

function croak_nonusage () {
    # Display the error message.  If it's a multi-line error message, indent
    # the second and subsequent lines by a few spaces.  
    # Try to auto-wrap the message if we have GNU Fold.

    local gnufold="/usr/bin/fold --width=65 --spaces"
    $gnufold < /dev/null &> /dev/null || gnufold=cat

    echo "${ME}: $*" | $gnufold | sed -e '2,$s/^/     /' >&2
    trap '' EXIT
    exit 1
}

if [[ $mydir && $mydir != $ME ]]; then
    # Where to find auxiliary programs:
    bin_dir="${mydir}"
else
    bin_dir="${RVM_ROOT:?$ME: You must set the RVM_ROOT variable before you run this program.}/rvm/bin"
fi

sanity_env="${bin_dir}/sanity-envars.bash"
[[ -f $sanity_env ]] || croak_nonusage "Internal error: Cannot find the file sanity-envars.bash ($sanity_env); something is badly broken."
[[ -r $sanity_env ]] || croak_nonusage "Internal error: Cannot read the file sanity-envars.bash ($sanity_env); something is badly broken.  You might check the file permissions or user id you used to extract Jikes RVM."
. "${sanity_env}";		# sets ME, defines checkenv()

checkenv HOME
checkenv RVM_ROOT
# We reset bin_dir so that we're sure to have an absolute pathname.
bin_dir="${RVM_ROOT}/rvm/bin";
checkenv RVM_BUILD

# TODO: This portion of the gdbrvm should be consolidated with the originally-identical part of runrvm.

. $RVM_BUILD/environment

ARGS="-X:i=$RVM_BUILD/RVM.image -X:vmClasses=$RVM_BUILD/RVM.classes/jksvm.jar:$RVM_BUILD/RVM.classes/rvmrt.jar"

for arg in "$@"; do
   if   [[ $arg = --   ]]; then
     print "$ME: the command line option \"--\" is no longer used!"
   fi
done

#
# Need to make some more defines
#
ARGS="$ARGS -Drvm.root=$RVM_ROOT"
ARGS="$ARGS -Drvm.build=$RVM_BUILD"
ARGS="$ARGS -Djava.home=$RVM_ROOT"
ARGS="$ARGS -Dgnu.classpath.home.url=file:${RVM_BUILD}"
ARGS="$ARGS -Dgnu.classpath.vm.shortname=JikesRVM"

ARGS="$ARGS -Duser.home=$HOME -Duser.dir=$(pwd) -Dos.name=$(uname -s) -Dos.version=$(uname -r) -Dos.arch=$(uname -m)"

# Now execute the VM
echo set args $ARGS "$@" > $RVM_BUILD/gdb.commandlineArgs
gdb $RVM_BUILD/JikesRVM -x $RVM_BUILD/gdb.commandlineArgs -x $RVM_ROOT/rvm/bin/gdbInit
