#! /bin/ksh
#
# (C) Copyright IBM Corp. 2001
#
#$Id$
#
# Build the RVM standard libraries, rvmrt.jar, from the java source files.
#
# Invocation:  jBuildLibs [--installOnly]
#
# @authors: Julian Dolby, Stephen Fink, David Grove, Martin Trapp

# Stop immediately if any programs we call return errors.
#
set -e

# Who we are.
#
ME=`basename $0`

function usage
{
cat <<EOF
usage: $ME [--installOnly]
Build the RVM standard libraries, rvmrt.jar, from the java source files.
--installOnly don't build, just tell the rvm to use the rvmrt.jar in
              \$RVM_ROOT/support/lib, whereever that might have come from.
EOF
  exit $1
}

function do_install
{
  print "$ME: Copying rvmrt.jar to $RVM_ROOT/support/lib"
  cp -f $RVM_BUILD/rvmrt.jar $RVM_ROOT/support/lib
  cp -f rvmrt.id $RVM_ROOT/rvm/bin/ids/rvmrt.installed
}

##
## Main part of script starts here
##

while [[ $# > 0 ]] ; do
  case $1 in
    --installOnly) installOnly="y";;
    --help) usage 0;;
    -h) usage 0;;
    *) usage 1;;
  esac
  shift
done


# Place where source files reside.
#
if [[ X$RVM_ROOT = "X" ]]; then
   print "$ME: please set your RVM_ROOT environment variable (eg. $HOME/rvmRoot)"
   exit 1
fi

# Place where RVM bootimage, booter, and runtime support files 
# will be placed.
#
if [[ X$RVM_BUILD = "X" ]]; then
   print "$ME: please set your RVM_BUILD environment variable (eg.  $HOME/rvmBuild)"
   exit 1
fi

# What configuration will host the build process
#
if [[ $RVM_HOST_CONFIG = "" ]]; then
   print "$ME: please set your RVM_HOST_CONFIG environment variable"
   print " eg. $RVM_ROOT/rvm/config/powerpc-ibm-aix4.3.3.0"
   exit 1
fi
. $RVM_HOST_CONFIG

if [[ x$installOnly = xy ]] ; then
  if [[ ! -r $RVM_ROOT/support/lib/rvmrt.jar ]] ; then
    echo "can't open $RVM_ROOT/support/lib/rvmrt.jar."
    exit 1
  fi
  mkdir -p /tmp/jbli$$
  cd /tmp/jbli$$
  $HOST_JAR xf $RVM_ROOT/support/lib/rvmrt.jar rvmrt.id
  cp -f rvmrt.id $RVM_ROOT/rvm/bin/ids/rvmrt.installed
  cd /tmp
  rm -rf /tmp/jbli$$
  echo "\$RVM_ROOT/support/lib/rvmrt.jar installed for"
  echo "RVM_ROOT=$RVM_ROOT."
  exit 0
fi

# we need classpath.jar because our libraries are very incomplete
#
if [[ ! -e $RVM_ROOT/support/lib/classpath.jar ]]; then
  jBuildClasspathJar
fi

# Create a temporary build directory
$RVM_ROOT/rvm/bin/jconfigure -D "BUILD_RVMRT_JAR=1" -D RVM_WITH_GNU_CLASSPATH=0 BaseBaseSemiSpace
cd $RVM_BUILD
./jbuild.expand
./jbuild.copy

# Copy the library sources 
# We're now copying the source paths from jikes-src
cp -r $RVM_ROOT/support/lib/src/* $RVM_BUILD/RVM.classes

# Compile the RVM sources
./jbuild.compile

# Compile the library sources
# Looking for  the following extensions: java, javax, com, gnu, org
cd $RVM_BUILD/RVM.classes
TOP_LEVEL_PACKAGES="java com/ibm/oti"
for p in $TOP_LEVEL_PACKAGES; do
    $FIND $p -name CVS -prune -o -name '*.java' -print | $XARGS $RVM_BUILD/jbuild.tool
done

cd $RVM_BUILD/RVM.classes

# Create the file rvmrt.id, containing the date
echo "R-`date -u +"%Y-%m-%d-%H-%M-%S"`" > rvmrt.id

# Create the jar file
$FIND . -type f | $GREP -v \.class\$ | $GREP -v \.properties\$ | $GREP -v rvmrt.id | $XARGS rm -f
$FIND . -type d -a -name CVS | $XARGS rm -rf
$HOST_JAR -cvf $RVM_BUILD/rvmrt.jar rvmrt.id $TOP_LEVEL_PACKAGES


# Install the new jar file?
# Don't want to ask this
if tty -s; then # keyboard is live (ie. this is not an automated build)
  print -n "$ME: Install new rvmrt.jar in $RVM_ROOT/support/lib? (y/n)"
  read install
fi
# Install now?
if [[ x$install = xy ]] ; then
  do_install
fi
