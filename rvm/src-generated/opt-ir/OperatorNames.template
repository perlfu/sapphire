/*
 *  This file is part of the Jikes RVM project (http://jikesrvm.org).
 *
 *  This file is licensed to You under the Common Public License (CPL);
 *  You may not use this file except in compliance with the License. You
 *  may obtain a copy of the License at
 *
 *      http://www.opensource.org/licenses/cpl1.0.php
 *
 *  See the COPYRIGHT.txt file distributed with this work for information
 *  regarding copyright ownership.
 */
package org.jikesrvm.compilers.opt.ir;

/**
 * Class to store the string representations of different operators.
 * They are in a separate class for efficiency.
 *
 * @see Operator
 */
public abstract class OperatorNames {

  public static final String[] operatorName = new String[] {
$$$$ FOREACH OPERATOR OperatorList.dat
$$$$ IF OPERATOR.SYMBOL != "ARCH_INDEPENDENT_END"
$$$$ LET OSYM @PAD(@LOWER(@SUBST("OPERATOR.SYMBOL", "r", ".")), 23, " ")
      "OSYM ",
$$$$ END LET
$$$$ END IF
$$$$ END FOREACH
$$$$ IF ARCHITECTURE != "NONE"
  //////////////////////////
  // END   Architecture Independent opcodes.
  // BEGIN Architecture Dependent opcodes & MIR.
  //////////////////////////
  $$$$ FOREACH OPERATOR ARCH_OP_LIST
    $$$$ LET OSYM @PAD(@LOWER(@SUBST("OPERATOR.SYMBOL", "r", ".")), 23, " ")
      "OSYM ",
    $$$$ END LET
  $$$$ END FOREACH
$$$$ ELSE
$$$$ IF USE_EXTRA_OPLIST == "TRUE"
  $$$$ FOREACH OPERATOR ExtraOperatorList.dat
    $$$$ LET OSYM @PAD(@LOWER(@SUBST("OPERATOR.SYMBOL", "r", ".")), 23, " ")
      "OSYM ",
    $$$$ END LET
  $$$$ END FOREACH
$$$$ END IF
$$$$ END IF
      "<UNKNOWN OPERATOR>"
    };

  public static String toString(Operator operator) {
     try {
       return operatorName[operator.opcode];
     }
     catch (ArrayIndexOutOfBoundsException e) {
       return operatorName[operatorName.length-1];
     }
  }

}


