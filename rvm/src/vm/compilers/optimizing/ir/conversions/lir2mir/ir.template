%{
/*
 * (C) Copyright IBM Corp. 2001
 */
//ir.brg
//$Id$

/**
 * Generate from ir.template and assembled rules files.
 *
 * @author Dave Grove
 * @author Igor Pechtchanski
 * @author Vivek Sarkar
 * @author Mauricio Serrano
 */
%}
$$$$ FOREACH OPERATOR ../../instruction/OperatorList.dat
  $$$$ IF OPERATOR.SYMBOL != "ARCH_INDEPENDENT_END"
%term OPERATOR.SYMBOL = OPERATOR.INDEX
  $$$$ END IF
$$$$ END FOREACH
$$$$ FOREACH OPERATOR ../../instruction/OperatorList.dat
$$$$ IF OPERATOR.SYMBOL == "ARCH_INDEPENDENT_END"
     $$$$ FOREACH INNEROP ARCH_OP_LIST
     $$$$ LET TMPVAL OPERATOR.INDEX + INNEROP.INDEX
%term INNEROP.SYMBOL = TMPVAL
     $$$$ END LET
     $$$$ END FOREACH
$$$$ ENDIF
$$$$ END FOREACH
%%
$$$$ FOREACH RULE THE_RULE_FILE
$$$$ IF "RULE.COST" =~ "?"
RULE.PRODUCTION		"" (RULE.COST)
$$$$ ELSE
RULE.PRODUCTION		"" RULE.COST
$$$$ END IF
$$$$ END FOREACH
%%
static final byte action[]={0
$$$$ FOREACH RULE THE_RULE_FILE
   ,RULE.FLAGS
$$$$ END FOREACH
};

$$$$ FOREACH RULE THE_RULE_FILE
$$$$ IF "RULE.FLAGS" =~ "EMIT_INSTRUCTION"
  $$$$ LET CASE RULE.INDEX+1
void codeCASE(OPT_BURS_TreeNode p) {
    RULE.TEMPLATE
}
  $$$$ END LET
$$$$ END IF
$$$$ END FOREACH

void code(OPT_BURS_TreeNode p, int  n, int ruleno) {
  switch(ruleno) {
$$$$ FOREACH RULE THE_RULE_FILE
$$$$ IF "RULE.FLAGS" =~ "EMIT_INSTRUCTION"
  $$$$ LET CASE RULE.INDEX+1
  case CASE: codeCASE(p); break;
  $$$$ END LET
$$$$ END IF
$$$$ END FOREACH
  default:
    throw new OPT_OptimizingCompilerException("BURS","rule without emit code:",OPT_BURS_Debug.string[ruleno]);
  }
}
}
