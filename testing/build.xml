<project name="TestDriver" default="report" basedir=".">

  <property name="jikesrvm.dir" location=".."/>
  <import file="${jikesrvm.dir}/build/base.xml"/>
  <import file="${jikesrvm.dir}/build/tasks.xml"/>

  <property name="tests.name" value="sanity"/>

  <property file="${jikesrvm.dir}/build/testing/${tests.name}.properties"/>

  <property name="driver.scratch.dir" location="${build.dir}/test-driver"/>
  <property name="build.results.dir" location="${driver.scratch.dir}/results"/>

  <property name="test.results.dir" value="${results.dir}/tests/${tests.name}"/>
  <property name="test.build.dir" value="${build.dir}/tests/${tests.name}"/>

  <property name="results.archive" location="${results.dir}/archive"/>
  <property name="results.weekly" location="${results.dir}/weekly"/>

  <!-- properties defining mailer properties-->
  <property name="mail.from" value="jikesrvm-core@lists.sourceforge.net"/>
  <property name="mail.to" value="jikesrvm-regression@lists.sourceforge.net"/>
  <property name="mail.host" value="localhost"/>
  <property name="mail.port" value="25"/>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                      Macro for setup test properties                     * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <macrodef name="testRunPropertyInit">
    <attribute name="tag"/>
    <sequential>
      <property name="test.run.@{tag}.configuration" value="@{tag}"/>
      <condition property="test.run.@{tag}.build.name"
                 value="${test.run.@{tag}.configuration}_${target.name}"
                 else="${test.run.@{tag}.configuration}_${target.name}_${patch.name}">
        <equals arg1="${patch.name}" arg2=""/>
      </condition>
      <property name="test.run.@{tag}.rvm.dir" location="${dist.dir}/${test.run.@{tag}.build.name}"/>
      <property name="test.run.@{tag}.name" value=""/>
      <property name="test.run.@{tag}.test.mode" value=""/>
      <property name="test.run.@{tag}.test.rvm.extra.args" value=""/>
    </sequential>
  </macrodef>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                          Task to actually run tests                      * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="test" depends="prepare-ant-tasks">
    <delete dir="${driver.scratch.dir}"/>
    <delete dir="${test.build.dir}"/>
    <delete dir="${test.results.dir}"/>

    <mkdir dir="${driver.scratch.dir}"/>
    <forEach list="${test.runs}" property="tag">
      <sequential>
        <testRunPropertyInit tag="@{tag}"/>
        <propertycopy name="test.run.@{tag}.done" from="${test.run.@{tag}.configuration}.done"/>
        <if>
          <not>
            <equals arg1="${test.run.@{tag}.done}" arg2="true"/>
          </not>
          <sequential>
            <echo message="Building ${test.run.@{tag}.configuration}"/>
            <subant failonerror="false" output="${driver.scratch.dir}/Build-${test.run.@{tag}.configuration}.txt">
              <filelist dir="${jikesrvm.dir}" files="build.xml"/>
              <property name="config.name" value="${test.run.@{tag}.configuration}"/>
            </subant>
            <property name="${test.run.@{tag}.configuration}.done" value="true"/>
          </sequential>
        </if>
        <echo message="Testing Run @{tag}"/>
        <echo message="    rvm.dir:        ${test.run.@{tag}.rvm.dir}"/>
        <echo message="    Configuration:  ${test.run.@{tag}.configuration}"/>
        <echo message="    Tests:          ${test.run.@{tag}.tests}"/>
        <echo message="    Run Name:       ${test.run.@{tag}.name}"/>
        <echo message="    Mode:           ${test.run.@{tag}.test.mode}"/>
        <echo message="    Extra Flags?:   ${test.run.@{tag}.test.rvm.extra.args}"/>
        <forEach list="${test.run.@{tag}.tests}" property="test">
          <sequential>
            <subant target="test" failonerror="false" output="${driver.scratch.dir}/Test-@{tag}-@{test}.txt">
              <filelist dir="tests" files="@{test}/build.xml"/>
              <property name="config.name" value="${test.run.@{tag}.configuration}"/>
              <property name="test.results.dir" value="${test.results.dir}"/>
              <property name="test.build.dir" value="${test.build.dir}"/>
              <property name="test.rvm.dir" location="${test.run.@{tag}.rvm.dir}"/>
              <property name="test.run.name" value="${test.run.@{tag}.name}"/>
              <property name="test.mode" value="${test.run.@{tag}.test.mode}"/>
              <property name="test.rvm.extra.args" value="${test.run.@{tag}.test.rvm.extra.args}"/>
              <propertyset>
                <propertyref prefix="exclude."/>
              </propertyset>
            </subant>
          </sequential>
        </forEach>
      </sequential>
    </forEach>
  </target>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                      Targets for retrieving svn version                  * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="check-svn-present">
    <available property="svn.present" file=".svn" type="dir"/>
    <property name="svn.exe" value="svn"/>
  </target>

  <target name="extract-svn-version" depends="check-svn-present" if="svn.present">
    <exec executable="${svn.exe}">
      <arg value="info"/>
      <redirector outputproperty="svn.revision">
        <outputfilterchain>
          <linecontains>
            <contains value="Revision: "/>
          </linecontains>
          <tokenfilter>
            <replacestring from="Revision: " to=""/>
          </tokenfilter>
        </outputfilterchain>
      </redirector>
    </exec>
  </target>

  <target name="get-svn-version" depends="extract-svn-version">
    <!-- set property if not already set -->
    <property name="svn.revision" value="1"/>
  </target>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                       Targets for aggregating results                    * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="aggregate" depends="prepare-ant-tasks,get-svn-version">
    <mkdir dir="${build.results.dir}"/>
    <echo file="${build.results.dir}/Results.xml" append="false">
      <![CDATA[<master-results name="${tests.name}">
  <revision>${svn.revision}</revision>
]]></echo>
    <forEach list="${test.runs}" property="tag">
      <sequential>
        <testRunPropertyInit tag="@{tag}"/>
        <echo file="${build.results.dir}/@{tag}.xml" append="false">
          <![CDATA[<test-run tag="@{tag}" name="${test.run.@{tag}.name}">]]></echo>
        <condition property="test.run.@{tag}.prefix" value="" else="${test.run.@{tag}.name}_">
          <equals arg1="${test.run.@{tag}.name}" arg2=""/>
        </condition>
        <forEach list="${test.run.@{tag}.tests}" property="test">
          <sequential >
            <concat destfile="${build.results.dir}/@{tag}.xml" append="true">
              <fileset dir="${test.run.@{tag}.rvm.dir}/tests" includes="${test.run.@{tag}.prefix}@{test}/Results.xml"/>
            </concat>
          </sequential>
        </forEach>
        <echo file="${build.results.dir}/@{tag}.xml" append="true"><![CDATA[</test-run>]]></echo>
        <concat destfile="${build.results.dir}/Results.xml" append="true">
          <fileset dir="${build.results.dir}" includes="@{tag}.xml"/>
        </concat>
      </sequential>
    </forEach>
    <echo file="${build.results.dir}/Results.xml" append="true"><![CDATA[</master-results>]]></echo>
  </target>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                  Targets for generating a simple report                  * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="gen-report" depends="aggregate">
    <xslt in="${build.results.dir}/Results.xml"
          out="${build.results.dir}/Report.xml"
          style="${jikesrvm.dir}/build/testing/results2report.xsl"
          force="true">
      <outputproperty name="method" value="xml"/>
      <outputproperty name="standalone" value="yes"/>
      <outputproperty name="encoding" value="US-ASCII"/>
      <outputproperty name="indent" value="yes"/>
      <outputproperty name="omit-xml-declaration" value="yes"/>
    </xslt>
    <xslt in="${build.results.dir}/Report.xml"
          out="${build.results.dir}/Report.html"
          style="${jikesrvm.dir}/build/testing/report2html.xsl"
          force="true">
      <outputproperty name="method" value="html"/>
      <outputproperty name="standalone" value="yes"/>
      <outputproperty name="encoding" value="US-ASCII"/>
      <outputproperty name="indent" value="yes"/>
    </xslt>
  </target>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                  Targets for generating a simple report                  * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="gen-weekly-report" depends="gen-report">
    <tstamp prefix="day0">
      <format property="DAY" pattern="EEEE" offset="-0" unit="day"/>
    </tstamp>
    <tstamp prefix="day1">
      <format property="DAY" pattern="EEEE" offset="-1" unit="day"/>
    </tstamp>
    <tstamp prefix="day2">
      <format property="DAY" pattern="EEEE" offset="-2" unit="day"/>
    </tstamp>
    <tstamp prefix="day3">
      <format property="DAY" pattern="EEEE" offset="-3" unit="day"/>
    </tstamp>
    <tstamp prefix="day4">
      <format property="DAY" pattern="EEEE" offset="-4" unit="day"/>
    </tstamp>
    <tstamp prefix="day5">
      <format property="DAY" pattern="EEEE" offset="-5" unit="day"/>
    </tstamp>
    <tstamp prefix="day6">
      <format property="DAY" pattern="EEEE" offset="-6" unit="day"/>
    </tstamp>
    <tstamp prefix="day7">
      <format property="DAY" pattern="EEEE" offset="-7" unit="day"/>
    </tstamp>

    <mkdir dir="${results.weekly}"/>
    <copy file="${build.results.dir}/Report.xml"
          tofile="${results.weekly}/Report-${tests.name}-${day0.DAY}.xml"/>

    <echo file="${build.results.dir}/WeeklyReport.xml" append="false"><![CDATA[<weekly-report>]]></echo>
    <concat destfile="${build.results.dir}/WeeklyReport.xml" append="true">
      <fileset dir="${results.weekly}" includes="Report-${tests.name}-${day0.DAY}.xml"/>
      <fileset dir="${results.weekly}" includes="Report-${tests.name}-${day1.DAY}.xml"/>
      <fileset dir="${results.weekly}" includes="Report-${tests.name}-${day2.DAY}.xml"/>
      <fileset dir="${results.weekly}" includes="Report-${tests.name}-${day3.DAY}.xml"/>
      <fileset dir="${results.weekly}" includes="Report-${tests.name}-${day4.DAY}.xml"/>
      <fileset dir="${results.weekly}" includes="Report-${tests.name}-${day5.DAY}.xml"/>
      <fileset dir="${results.weekly}" includes="Report-${tests.name}-${day6.DAY}.xml"/>
      <fileset dir="${results.weekly}" includes="Report-${tests.name}-${day7.DAY}.xml"/>
    </concat>
    <echo file="${build.results.dir}/WeeklyReport.xml" append="true"><![CDATA[</weekly-report>]]></echo>
  </target>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                  Targets for archiving results and report                * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="archive" depends="gen-report" if="archive.tests">
    <tstamp prefix="report"/>
    <mkdir dir="${results.archive}"/>
    <gzip src="${build.results.dir}/Results.xml"
          destfile="${results.archive}/${tests.name}_r${svn.revision}_${target.name}_Results.xml.gz"/>
    <gzip src="${build.results.dir}/Report.xml"
          destfile="${results.archive}/${tests.name}_r${svn.revision}_${target.name}_Report.xml.gz"/>
    <gzip src="${build.results.dir}/Report.html"
          destfile="${results.archive}/${tests.name}_r${svn.revision}_${target.name}_Report.html.gz"/>
  </target>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                          Targets for sending report                      * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="send-report" depends="archive" if="send.reports">
    <mail mailhost="${mail.host}"
          mailport="${mail.port}"
          messagemimetype="text/html"
          subject="Test Results for ${tests.name} on ${target.name}"
          messagefile="${build.results.dir}/Report.html">
      <from address="${mail.from}"/>
      <replyto address="jikesrvm-core@lists.sourceforge.net"/>
      <to address="${mail.to}"/>
    </mail>
  </target>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                          Meta-target for reporting                       * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="report" depends="test,archive,send-report"/>

</project>
