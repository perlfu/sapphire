// QBJ JLEX Lexer input
// Copyright 1999-2000 Toshihiro Horie
// portions Copyright 1999 Regents of the University of California
// see also lextail.txt and qbw.txt and lexop.txt
import Sym.*;               // definition of terminals returned by scanner
import java_cup.runtime.*;  // definition of scanner/parser interface
/* semantic value of token returned by scanner */
final class TokenValue {
  public int lineBegin;
  public int charBegin;
  public String text;
  public String filename;
  TokenValue() { }
  TokenValue(String text, int lineBegin, int charBegin, String filename) {
    this.text = text;
    this.lineBegin = lineBegin; 
    this.charBegin = charBegin;
    this.filename = filename;
  }
  public String toString() {
    return text;
  }
}


class Yylex implements java_cup.runtime.Scanner {
	private final int YY_BUFFER_SIZE = 512;
	private final int YY_F = -1;
	private final int YY_NO_STATE = -1;
	private final int YY_NOT_ACCEPT = 0;
	private final int YY_START = 1;
	private final int YY_END = 2;
	private final int YY_NO_ANCHOR = 4;
	private final int YY_BOL = 256;
	private final int YY_EOF = 257;

  private boolean handled_unterminated_string=false;
  private int eofyychar=0;
  private int state=0;

  public String sourceFilename;  
	private java.io.BufferedReader yy_reader;
	private int yy_buffer_index;
	private int yy_buffer_read;
	private int yy_buffer_start;
	private int yy_buffer_end;
	private char yy_buffer[];
	private int yychar;
	private int yyline;
	private boolean yy_at_bol;
	private int yy_lexical_state;

	Yylex (java.io.Reader reader) {
		this ();
		if (null == reader) {
			throw (new Error("Error: Bad input stream initializer."));
		}
		yy_reader = new java.io.BufferedReader(reader);
	}

	Yylex (java.io.InputStream instream) {
		this ();
		if (null == instream) {
			throw (new Error("Error: Bad input stream initializer."));
		}
		yy_reader = new java.io.BufferedReader(new java.io.InputStreamReader(instream));
	}

	private Yylex () {
		yy_buffer = new char[YY_BUFFER_SIZE];
		yy_buffer_read = 0;
		yy_buffer_index = 0;
		yy_buffer_start = 0;
		yy_buffer_end = 0;
		yychar = 0;
		yyline = 0;
		yy_at_bol = true;
		yy_lexical_state = YYINITIAL;
	}

	private boolean yy_eof_done = false;
	private final int sYYCOMMENT = 1;
	private final int sYYMETACMD2 = 4;
	private final int YYINITIAL = 0;
	private final int sYYFILESTR = 6;
	private final int sYYINCLUDE = 5;
	private final int sYYREMSTART = 3;
	private final int sYYSTRING = 2;
	private final int yy_state_dtrans[] = {
		0,
		240,
		241,
		299,
		301,
		337,
		255
	};
	private void yybegin (int state) {
		yy_lexical_state = state;
	}
	private int yy_advance ()
		throws java.io.IOException {
		int next_read;
		int i;
		int j;

		if (yy_buffer_index < yy_buffer_read) {
			return yy_buffer[yy_buffer_index++];
		}

		if (0 != yy_buffer_start) {
			i = yy_buffer_start;
			j = 0;
			while (i < yy_buffer_read) {
				yy_buffer[j] = yy_buffer[i];
				++i;
				++j;
			}
			yy_buffer_end = yy_buffer_end - yy_buffer_start;
			yy_buffer_start = 0;
			yy_buffer_read = j;
			yy_buffer_index = j;
			next_read = yy_reader.read(yy_buffer,
					yy_buffer_read,
					yy_buffer.length - yy_buffer_read);
			if (-1 == next_read) {
				return YY_EOF;
			}
			yy_buffer_read = yy_buffer_read + next_read;
		}

		while (yy_buffer_index >= yy_buffer_read) {
			if (yy_buffer_index >= yy_buffer.length) {
				yy_buffer = yy_double(yy_buffer);
			}
			next_read = yy_reader.read(yy_buffer,
					yy_buffer_read,
					yy_buffer.length - yy_buffer_read);
			if (-1 == next_read) {
				return YY_EOF;
			}
			yy_buffer_read = yy_buffer_read + next_read;
		}
		return yy_buffer[yy_buffer_index++];
	}
	private void yy_move_end () {
		if (yy_buffer_end > yy_buffer_start &&
		    '\n' == yy_buffer[yy_buffer_end-1])
			yy_buffer_end--;
		if (yy_buffer_end > yy_buffer_start &&
		    '\r' == yy_buffer[yy_buffer_end-1])
			yy_buffer_end--;
	}
	private boolean yy_last_was_cr=false;
	private void yy_mark_start () {
		int i;
		for (i = yy_buffer_start; i < yy_buffer_index; ++i) {
			if ('\n' == yy_buffer[i] && !yy_last_was_cr) {
				++yyline;
			}
			if ('\r' == yy_buffer[i]) {
				++yyline;
				yy_last_was_cr=true;
			} else yy_last_was_cr=false;
		}
		yychar = yychar
			+ yy_buffer_index - yy_buffer_start;
		yy_buffer_start = yy_buffer_index;
	}
	private void yy_mark_end () {
		yy_buffer_end = yy_buffer_index;
	}
	private void yy_to_mark () {
		yy_buffer_index = yy_buffer_end;
		yy_at_bol = (yy_buffer_end > yy_buffer_start) &&
		            ('\r' == yy_buffer[yy_buffer_end-1] ||
		             '\n' == yy_buffer[yy_buffer_end-1] ||
		             2028/*LS*/ == yy_buffer[yy_buffer_end-1] ||
		             2029/*PS*/ == yy_buffer[yy_buffer_end-1]);
	}
	private java.lang.String yytext () {
		return (new java.lang.String(yy_buffer,
			yy_buffer_start,
			yy_buffer_end - yy_buffer_start));
	}
	private int yylength () {
		return yy_buffer_end - yy_buffer_start;
	}
	private char[] yy_double (char buf[]) {
		int i;
		char newbuf[];
		newbuf = new char[2*buf.length];
		for (i = 0; i < buf.length; ++i) {
			newbuf[i] = buf[i];
		}
		return newbuf;
	}
	private final int YY_E_INTERNAL = 0;
	private final int YY_E_MATCH = 1;
	private java.lang.String yy_error_string[] = {
		"Error: Internal error.\n",
		"Error: Unmatched input.\n"
	};
	private void yy_error (int code,boolean fatal) {
		java.lang.System.out.print(yy_error_string[code]);
		java.lang.System.out.flush();
		if (fatal) {
			throw new Error("Fatal Error.\n");
		}
	}
	private int[][] unpackFromString(int size1, int size2, String st) {
		int colonIndex = -1;
		String lengthString;
		int sequenceLength = 0;
		int sequenceInteger = 0;

		int commaIndex;
		String workString;

		int res[][] = new int[size1][size2];
		for (int i= 0; i < size1; i++) {
			for (int j= 0; j < size2; j++) {
				if (sequenceLength != 0) {
					res[i][j] = sequenceInteger;
					sequenceLength--;
					continue;
				}
				commaIndex = st.indexOf(',');
				workString = (commaIndex==-1) ? st :
					st.substring(0, commaIndex);
				st = st.substring(commaIndex+1);
				colonIndex = workString.indexOf(':');
				if (colonIndex == -1) {
					res[i][j]=Integer.parseInt(workString);
					continue;
				}
				lengthString =
					workString.substring(colonIndex+1);
				sequenceLength=Integer.parseInt(lengthString);
				workString=workString.substring(0,colonIndex);
				sequenceInteger=Integer.parseInt(workString);
				res[i][j] = sequenceInteger;
				sequenceLength--;
			}
		}
		return res;
	}
	private int yy_acpt[] = {
		/* 0 */ YY_NOT_ACCEPT,
		/* 1 */ YY_NO_ANCHOR,
		/* 2 */ YY_NO_ANCHOR,
		/* 3 */ YY_NO_ANCHOR,
		/* 4 */ YY_NO_ANCHOR,
		/* 5 */ YY_NO_ANCHOR,
		/* 6 */ YY_NO_ANCHOR,
		/* 7 */ YY_NO_ANCHOR,
		/* 8 */ YY_NO_ANCHOR,
		/* 9 */ YY_NO_ANCHOR,
		/* 10 */ YY_NO_ANCHOR,
		/* 11 */ YY_NO_ANCHOR,
		/* 12 */ YY_NO_ANCHOR,
		/* 13 */ YY_NO_ANCHOR,
		/* 14 */ YY_NO_ANCHOR,
		/* 15 */ YY_NO_ANCHOR,
		/* 16 */ YY_NO_ANCHOR,
		/* 17 */ YY_NO_ANCHOR,
		/* 18 */ YY_NO_ANCHOR,
		/* 19 */ YY_NO_ANCHOR,
		/* 20 */ YY_NO_ANCHOR,
		/* 21 */ YY_NO_ANCHOR,
		/* 22 */ YY_NO_ANCHOR,
		/* 23 */ YY_NO_ANCHOR,
		/* 24 */ YY_NO_ANCHOR,
		/* 25 */ YY_NO_ANCHOR,
		/* 26 */ YY_NO_ANCHOR,
		/* 27 */ YY_NO_ANCHOR,
		/* 28 */ YY_NO_ANCHOR,
		/* 29 */ YY_NO_ANCHOR,
		/* 30 */ YY_NO_ANCHOR,
		/* 31 */ YY_NO_ANCHOR,
		/* 32 */ YY_NO_ANCHOR,
		/* 33 */ YY_NO_ANCHOR,
		/* 34 */ YY_NO_ANCHOR,
		/* 35 */ YY_NO_ANCHOR,
		/* 36 */ YY_NO_ANCHOR,
		/* 37 */ YY_NO_ANCHOR,
		/* 38 */ YY_NO_ANCHOR,
		/* 39 */ YY_NO_ANCHOR,
		/* 40 */ YY_NO_ANCHOR,
		/* 41 */ YY_NO_ANCHOR,
		/* 42 */ YY_NO_ANCHOR,
		/* 43 */ YY_NO_ANCHOR,
		/* 44 */ YY_NO_ANCHOR,
		/* 45 */ YY_NO_ANCHOR,
		/* 46 */ YY_NO_ANCHOR,
		/* 47 */ YY_NO_ANCHOR,
		/* 48 */ YY_NO_ANCHOR,
		/* 49 */ YY_NO_ANCHOR,
		/* 50 */ YY_NO_ANCHOR,
		/* 51 */ YY_NO_ANCHOR,
		/* 52 */ YY_NO_ANCHOR,
		/* 53 */ YY_NO_ANCHOR,
		/* 54 */ YY_NO_ANCHOR,
		/* 55 */ YY_NO_ANCHOR,
		/* 56 */ YY_NO_ANCHOR,
		/* 57 */ YY_NO_ANCHOR,
		/* 58 */ YY_NO_ANCHOR,
		/* 59 */ YY_NO_ANCHOR,
		/* 60 */ YY_NO_ANCHOR,
		/* 61 */ YY_NO_ANCHOR,
		/* 62 */ YY_NO_ANCHOR,
		/* 63 */ YY_NO_ANCHOR,
		/* 64 */ YY_NO_ANCHOR,
		/* 65 */ YY_NO_ANCHOR,
		/* 66 */ YY_NO_ANCHOR,
		/* 67 */ YY_NO_ANCHOR,
		/* 68 */ YY_NO_ANCHOR,
		/* 69 */ YY_NO_ANCHOR,
		/* 70 */ YY_NO_ANCHOR,
		/* 71 */ YY_NO_ANCHOR,
		/* 72 */ YY_NO_ANCHOR,
		/* 73 */ YY_NO_ANCHOR,
		/* 74 */ YY_NO_ANCHOR,
		/* 75 */ YY_NO_ANCHOR,
		/* 76 */ YY_NO_ANCHOR,
		/* 77 */ YY_NO_ANCHOR,
		/* 78 */ YY_NO_ANCHOR,
		/* 79 */ YY_NO_ANCHOR,
		/* 80 */ YY_NO_ANCHOR,
		/* 81 */ YY_NO_ANCHOR,
		/* 82 */ YY_NO_ANCHOR,
		/* 83 */ YY_NO_ANCHOR,
		/* 84 */ YY_NO_ANCHOR,
		/* 85 */ YY_NO_ANCHOR,
		/* 86 */ YY_NO_ANCHOR,
		/* 87 */ YY_NO_ANCHOR,
		/* 88 */ YY_NO_ANCHOR,
		/* 89 */ YY_NO_ANCHOR,
		/* 90 */ YY_NO_ANCHOR,
		/* 91 */ YY_NO_ANCHOR,
		/* 92 */ YY_NO_ANCHOR,
		/* 93 */ YY_NO_ANCHOR,
		/* 94 */ YY_NO_ANCHOR,
		/* 95 */ YY_NO_ANCHOR,
		/* 96 */ YY_NO_ANCHOR,
		/* 97 */ YY_NO_ANCHOR,
		/* 98 */ YY_NO_ANCHOR,
		/* 99 */ YY_NO_ANCHOR,
		/* 100 */ YY_NO_ANCHOR,
		/* 101 */ YY_NO_ANCHOR,
		/* 102 */ YY_NO_ANCHOR,
		/* 103 */ YY_NO_ANCHOR,
		/* 104 */ YY_NO_ANCHOR,
		/* 105 */ YY_NO_ANCHOR,
		/* 106 */ YY_NO_ANCHOR,
		/* 107 */ YY_NO_ANCHOR,
		/* 108 */ YY_NO_ANCHOR,
		/* 109 */ YY_NO_ANCHOR,
		/* 110 */ YY_NO_ANCHOR,
		/* 111 */ YY_NO_ANCHOR,
		/* 112 */ YY_NO_ANCHOR,
		/* 113 */ YY_NO_ANCHOR,
		/* 114 */ YY_NO_ANCHOR,
		/* 115 */ YY_NO_ANCHOR,
		/* 116 */ YY_NO_ANCHOR,
		/* 117 */ YY_NO_ANCHOR,
		/* 118 */ YY_NO_ANCHOR,
		/* 119 */ YY_NO_ANCHOR,
		/* 120 */ YY_NO_ANCHOR,
		/* 121 */ YY_NO_ANCHOR,
		/* 122 */ YY_NO_ANCHOR,
		/* 123 */ YY_NO_ANCHOR,
		/* 124 */ YY_NO_ANCHOR,
		/* 125 */ YY_NO_ANCHOR,
		/* 126 */ YY_NO_ANCHOR,
		/* 127 */ YY_NO_ANCHOR,
		/* 128 */ YY_NO_ANCHOR,
		/* 129 */ YY_NO_ANCHOR,
		/* 130 */ YY_NO_ANCHOR,
		/* 131 */ YY_NO_ANCHOR,
		/* 132 */ YY_NO_ANCHOR,
		/* 133 */ YY_NO_ANCHOR,
		/* 134 */ YY_NO_ANCHOR,
		/* 135 */ YY_NO_ANCHOR,
		/* 136 */ YY_NO_ANCHOR,
		/* 137 */ YY_NO_ANCHOR,
		/* 138 */ YY_NO_ANCHOR,
		/* 139 */ YY_NO_ANCHOR,
		/* 140 */ YY_NO_ANCHOR,
		/* 141 */ YY_NO_ANCHOR,
		/* 142 */ YY_NO_ANCHOR,
		/* 143 */ YY_NO_ANCHOR,
		/* 144 */ YY_NO_ANCHOR,
		/* 145 */ YY_NO_ANCHOR,
		/* 146 */ YY_NO_ANCHOR,
		/* 147 */ YY_NO_ANCHOR,
		/* 148 */ YY_NO_ANCHOR,
		/* 149 */ YY_NO_ANCHOR,
		/* 150 */ YY_NO_ANCHOR,
		/* 151 */ YY_NO_ANCHOR,
		/* 152 */ YY_NO_ANCHOR,
		/* 153 */ YY_NO_ANCHOR,
		/* 154 */ YY_NO_ANCHOR,
		/* 155 */ YY_NO_ANCHOR,
		/* 156 */ YY_NO_ANCHOR,
		/* 157 */ YY_NO_ANCHOR,
		/* 158 */ YY_NO_ANCHOR,
		/* 159 */ YY_NO_ANCHOR,
		/* 160 */ YY_NO_ANCHOR,
		/* 161 */ YY_NO_ANCHOR,
		/* 162 */ YY_NO_ANCHOR,
		/* 163 */ YY_NO_ANCHOR,
		/* 164 */ YY_NO_ANCHOR,
		/* 165 */ YY_NO_ANCHOR,
		/* 166 */ YY_NO_ANCHOR,
		/* 167 */ YY_NO_ANCHOR,
		/* 168 */ YY_NO_ANCHOR,
		/* 169 */ YY_NO_ANCHOR,
		/* 170 */ YY_NO_ANCHOR,
		/* 171 */ YY_NO_ANCHOR,
		/* 172 */ YY_NO_ANCHOR,
		/* 173 */ YY_NO_ANCHOR,
		/* 174 */ YY_NO_ANCHOR,
		/* 175 */ YY_NO_ANCHOR,
		/* 176 */ YY_NO_ANCHOR,
		/* 177 */ YY_NO_ANCHOR,
		/* 178 */ YY_NO_ANCHOR,
		/* 179 */ YY_NO_ANCHOR,
		/* 180 */ YY_NO_ANCHOR,
		/* 181 */ YY_NO_ANCHOR,
		/* 182 */ YY_NO_ANCHOR,
		/* 183 */ YY_NO_ANCHOR,
		/* 184 */ YY_NO_ANCHOR,
		/* 185 */ YY_NO_ANCHOR,
		/* 186 */ YY_NO_ANCHOR,
		/* 187 */ YY_NO_ANCHOR,
		/* 188 */ YY_NO_ANCHOR,
		/* 189 */ YY_NO_ANCHOR,
		/* 190 */ YY_NO_ANCHOR,
		/* 191 */ YY_NO_ANCHOR,
		/* 192 */ YY_NO_ANCHOR,
		/* 193 */ YY_NO_ANCHOR,
		/* 194 */ YY_NO_ANCHOR,
		/* 195 */ YY_NO_ANCHOR,
		/* 196 */ YY_NO_ANCHOR,
		/* 197 */ YY_NO_ANCHOR,
		/* 198 */ YY_NO_ANCHOR,
		/* 199 */ YY_NO_ANCHOR,
		/* 200 */ YY_NO_ANCHOR,
		/* 201 */ YY_NO_ANCHOR,
		/* 202 */ YY_NO_ANCHOR,
		/* 203 */ YY_NO_ANCHOR,
		/* 204 */ YY_NO_ANCHOR,
		/* 205 */ YY_NO_ANCHOR,
		/* 206 */ YY_NO_ANCHOR,
		/* 207 */ YY_NO_ANCHOR,
		/* 208 */ YY_NO_ANCHOR,
		/* 209 */ YY_NO_ANCHOR,
		/* 210 */ YY_NO_ANCHOR,
		/* 211 */ YY_NO_ANCHOR,
		/* 212 */ YY_NO_ANCHOR,
		/* 213 */ YY_NO_ANCHOR,
		/* 214 */ YY_NO_ANCHOR,
		/* 215 */ YY_NO_ANCHOR,
		/* 216 */ YY_NO_ANCHOR,
		/* 217 */ YY_NO_ANCHOR,
		/* 218 */ YY_NO_ANCHOR,
		/* 219 */ YY_NO_ANCHOR,
		/* 220 */ YY_NO_ANCHOR,
		/* 221 */ YY_NO_ANCHOR,
		/* 222 */ YY_NO_ANCHOR,
		/* 223 */ YY_NO_ANCHOR,
		/* 224 */ YY_NO_ANCHOR,
		/* 225 */ YY_NO_ANCHOR,
		/* 226 */ YY_NO_ANCHOR,
		/* 227 */ YY_NO_ANCHOR,
		/* 228 */ YY_NO_ANCHOR,
		/* 229 */ YY_NO_ANCHOR,
		/* 230 */ YY_NO_ANCHOR,
		/* 231 */ YY_NO_ANCHOR,
		/* 232 */ YY_NO_ANCHOR,
		/* 233 */ YY_NO_ANCHOR,
		/* 234 */ YY_NO_ANCHOR,
		/* 235 */ YY_NO_ANCHOR,
		/* 236 */ YY_NO_ANCHOR,
		/* 237 */ YY_NO_ANCHOR,
		/* 238 */ YY_NO_ANCHOR,
		/* 239 */ YY_NO_ANCHOR,
		/* 240 */ YY_NO_ANCHOR,
		/* 241 */ YY_NO_ANCHOR,
		/* 242 */ YY_NO_ANCHOR,
		/* 243 */ YY_NO_ANCHOR,
		/* 244 */ YY_NO_ANCHOR,
		/* 245 */ YY_NO_ANCHOR,
		/* 246 */ YY_NO_ANCHOR,
		/* 247 */ YY_NO_ANCHOR,
		/* 248 */ YY_NO_ANCHOR,
		/* 249 */ YY_NO_ANCHOR,
		/* 250 */ YY_NO_ANCHOR,
		/* 251 */ YY_NO_ANCHOR,
		/* 252 */ YY_NO_ANCHOR,
		/* 253 */ YY_NO_ANCHOR,
		/* 254 */ YY_NO_ANCHOR,
		/* 255 */ YY_NO_ANCHOR,
		/* 256 */ YY_NO_ANCHOR,
		/* 257 */ YY_NO_ANCHOR,
		/* 258 */ YY_NOT_ACCEPT,
		/* 259 */ YY_NO_ANCHOR,
		/* 260 */ YY_NO_ANCHOR,
		/* 261 */ YY_NO_ANCHOR,
		/* 262 */ YY_NO_ANCHOR,
		/* 263 */ YY_NO_ANCHOR,
		/* 264 */ YY_NO_ANCHOR,
		/* 265 */ YY_NO_ANCHOR,
		/* 266 */ YY_NO_ANCHOR,
		/* 267 */ YY_NO_ANCHOR,
		/* 268 */ YY_NO_ANCHOR,
		/* 269 */ YY_NO_ANCHOR,
		/* 270 */ YY_NOT_ACCEPT,
		/* 271 */ YY_NO_ANCHOR,
		/* 272 */ YY_NO_ANCHOR,
		/* 273 */ YY_NO_ANCHOR,
		/* 274 */ YY_NO_ANCHOR,
		/* 275 */ YY_NO_ANCHOR,
		/* 276 */ YY_NOT_ACCEPT,
		/* 277 */ YY_NO_ANCHOR,
		/* 278 */ YY_NO_ANCHOR,
		/* 279 */ YY_NOT_ACCEPT,
		/* 280 */ YY_NO_ANCHOR,
		/* 281 */ YY_NO_ANCHOR,
		/* 282 */ YY_NOT_ACCEPT,
		/* 283 */ YY_NO_ANCHOR,
		/* 284 */ YY_NO_ANCHOR,
		/* 285 */ YY_NOT_ACCEPT,
		/* 286 */ YY_NO_ANCHOR,
		/* 287 */ YY_NOT_ACCEPT,
		/* 288 */ YY_NO_ANCHOR,
		/* 289 */ YY_NOT_ACCEPT,
		/* 290 */ YY_NO_ANCHOR,
		/* 291 */ YY_NOT_ACCEPT,
		/* 292 */ YY_NO_ANCHOR,
		/* 293 */ YY_NOT_ACCEPT,
		/* 294 */ YY_NO_ANCHOR,
		/* 295 */ YY_NOT_ACCEPT,
		/* 296 */ YY_NO_ANCHOR,
		/* 297 */ YY_NOT_ACCEPT,
		/* 298 */ YY_NO_ANCHOR,
		/* 299 */ YY_NOT_ACCEPT,
		/* 300 */ YY_NO_ANCHOR,
		/* 301 */ YY_NOT_ACCEPT,
		/* 302 */ YY_NO_ANCHOR,
		/* 303 */ YY_NOT_ACCEPT,
		/* 304 */ YY_NO_ANCHOR,
		/* 305 */ YY_NOT_ACCEPT,
		/* 306 */ YY_NO_ANCHOR,
		/* 307 */ YY_NOT_ACCEPT,
		/* 308 */ YY_NO_ANCHOR,
		/* 309 */ YY_NOT_ACCEPT,
		/* 310 */ YY_NO_ANCHOR,
		/* 311 */ YY_NOT_ACCEPT,
		/* 312 */ YY_NO_ANCHOR,
		/* 313 */ YY_NOT_ACCEPT,
		/* 314 */ YY_NO_ANCHOR,
		/* 315 */ YY_NOT_ACCEPT,
		/* 316 */ YY_NO_ANCHOR,
		/* 317 */ YY_NOT_ACCEPT,
		/* 318 */ YY_NO_ANCHOR,
		/* 319 */ YY_NOT_ACCEPT,
		/* 320 */ YY_NO_ANCHOR,
		/* 321 */ YY_NOT_ACCEPT,
		/* 322 */ YY_NO_ANCHOR,
		/* 323 */ YY_NOT_ACCEPT,
		/* 324 */ YY_NO_ANCHOR,
		/* 325 */ YY_NOT_ACCEPT,
		/* 326 */ YY_NO_ANCHOR,
		/* 327 */ YY_NOT_ACCEPT,
		/* 328 */ YY_NO_ANCHOR,
		/* 329 */ YY_NOT_ACCEPT,
		/* 330 */ YY_NO_ANCHOR,
		/* 331 */ YY_NOT_ACCEPT,
		/* 332 */ YY_NO_ANCHOR,
		/* 333 */ YY_NOT_ACCEPT,
		/* 334 */ YY_NO_ANCHOR,
		/* 335 */ YY_NOT_ACCEPT,
		/* 336 */ YY_NO_ANCHOR,
		/* 337 */ YY_NOT_ACCEPT,
		/* 338 */ YY_NO_ANCHOR,
		/* 339 */ YY_NOT_ACCEPT,
		/* 340 */ YY_NO_ANCHOR,
		/* 341 */ YY_NO_ANCHOR,
		/* 342 */ YY_NO_ANCHOR,
		/* 343 */ YY_NO_ANCHOR,
		/* 344 */ YY_NO_ANCHOR,
		/* 345 */ YY_NO_ANCHOR,
		/* 346 */ YY_NO_ANCHOR,
		/* 347 */ YY_NO_ANCHOR,
		/* 348 */ YY_NO_ANCHOR,
		/* 349 */ YY_NO_ANCHOR,
		/* 350 */ YY_NO_ANCHOR,
		/* 351 */ YY_NO_ANCHOR,
		/* 352 */ YY_NO_ANCHOR,
		/* 353 */ YY_NO_ANCHOR,
		/* 354 */ YY_NO_ANCHOR,
		/* 355 */ YY_NO_ANCHOR,
		/* 356 */ YY_NO_ANCHOR,
		/* 357 */ YY_NO_ANCHOR,
		/* 358 */ YY_NO_ANCHOR,
		/* 359 */ YY_NO_ANCHOR,
		/* 360 */ YY_NO_ANCHOR,
		/* 361 */ YY_NO_ANCHOR,
		/* 362 */ YY_NO_ANCHOR,
		/* 363 */ YY_NO_ANCHOR,
		/* 364 */ YY_NO_ANCHOR,
		/* 365 */ YY_NO_ANCHOR,
		/* 366 */ YY_NO_ANCHOR,
		/* 367 */ YY_NO_ANCHOR,
		/* 368 */ YY_NO_ANCHOR,
		/* 369 */ YY_NO_ANCHOR,
		/* 370 */ YY_NO_ANCHOR,
		/* 371 */ YY_NO_ANCHOR,
		/* 372 */ YY_NO_ANCHOR,
		/* 373 */ YY_NO_ANCHOR,
		/* 374 */ YY_NO_ANCHOR,
		/* 375 */ YY_NO_ANCHOR,
		/* 376 */ YY_NO_ANCHOR,
		/* 377 */ YY_NO_ANCHOR,
		/* 378 */ YY_NO_ANCHOR,
		/* 379 */ YY_NO_ANCHOR,
		/* 380 */ YY_NO_ANCHOR,
		/* 381 */ YY_NO_ANCHOR,
		/* 382 */ YY_NO_ANCHOR,
		/* 383 */ YY_NO_ANCHOR,
		/* 384 */ YY_NO_ANCHOR,
		/* 385 */ YY_NO_ANCHOR,
		/* 386 */ YY_NO_ANCHOR,
		/* 387 */ YY_NO_ANCHOR,
		/* 388 */ YY_NO_ANCHOR,
		/* 389 */ YY_NO_ANCHOR,
		/* 390 */ YY_NO_ANCHOR,
		/* 391 */ YY_NO_ANCHOR,
		/* 392 */ YY_NO_ANCHOR,
		/* 393 */ YY_NO_ANCHOR,
		/* 394 */ YY_NO_ANCHOR,
		/* 395 */ YY_NO_ANCHOR,
		/* 396 */ YY_NO_ANCHOR,
		/* 397 */ YY_NO_ANCHOR,
		/* 398 */ YY_NO_ANCHOR,
		/* 399 */ YY_NO_ANCHOR,
		/* 400 */ YY_NO_ANCHOR,
		/* 401 */ YY_NO_ANCHOR,
		/* 402 */ YY_NO_ANCHOR,
		/* 403 */ YY_NO_ANCHOR,
		/* 404 */ YY_NO_ANCHOR,
		/* 405 */ YY_NO_ANCHOR,
		/* 406 */ YY_NO_ANCHOR,
		/* 407 */ YY_NO_ANCHOR,
		/* 408 */ YY_NO_ANCHOR,
		/* 409 */ YY_NO_ANCHOR,
		/* 410 */ YY_NO_ANCHOR,
		/* 411 */ YY_NO_ANCHOR,
		/* 412 */ YY_NO_ANCHOR,
		/* 413 */ YY_NO_ANCHOR,
		/* 414 */ YY_NO_ANCHOR,
		/* 415 */ YY_NO_ANCHOR,
		/* 416 */ YY_NO_ANCHOR,
		/* 417 */ YY_NO_ANCHOR,
		/* 418 */ YY_NO_ANCHOR,
		/* 419 */ YY_NO_ANCHOR,
		/* 420 */ YY_NO_ANCHOR,
		/* 421 */ YY_NO_ANCHOR,
		/* 422 */ YY_NO_ANCHOR,
		/* 423 */ YY_NO_ANCHOR,
		/* 424 */ YY_NO_ANCHOR,
		/* 425 */ YY_NO_ANCHOR,
		/* 426 */ YY_NO_ANCHOR,
		/* 427 */ YY_NO_ANCHOR,
		/* 428 */ YY_NO_ANCHOR,
		/* 429 */ YY_NO_ANCHOR,
		/* 430 */ YY_NO_ANCHOR,
		/* 431 */ YY_NO_ANCHOR,
		/* 432 */ YY_NO_ANCHOR,
		/* 433 */ YY_NO_ANCHOR,
		/* 434 */ YY_NO_ANCHOR,
		/* 435 */ YY_NO_ANCHOR,
		/* 436 */ YY_NO_ANCHOR,
		/* 437 */ YY_NO_ANCHOR,
		/* 438 */ YY_NO_ANCHOR,
		/* 439 */ YY_NO_ANCHOR,
		/* 440 */ YY_NO_ANCHOR,
		/* 441 */ YY_NO_ANCHOR,
		/* 442 */ YY_NO_ANCHOR,
		/* 443 */ YY_NO_ANCHOR,
		/* 444 */ YY_NO_ANCHOR,
		/* 445 */ YY_NO_ANCHOR,
		/* 446 */ YY_NO_ANCHOR,
		/* 447 */ YY_NO_ANCHOR,
		/* 448 */ YY_NO_ANCHOR,
		/* 449 */ YY_NO_ANCHOR,
		/* 450 */ YY_NO_ANCHOR,
		/* 451 */ YY_NO_ANCHOR,
		/* 452 */ YY_NO_ANCHOR,
		/* 453 */ YY_NO_ANCHOR,
		/* 454 */ YY_NO_ANCHOR,
		/* 455 */ YY_NO_ANCHOR,
		/* 456 */ YY_NO_ANCHOR,
		/* 457 */ YY_NO_ANCHOR,
		/* 458 */ YY_NO_ANCHOR,
		/* 459 */ YY_NO_ANCHOR,
		/* 460 */ YY_NO_ANCHOR,
		/* 461 */ YY_NO_ANCHOR,
		/* 462 */ YY_NO_ANCHOR,
		/* 463 */ YY_NO_ANCHOR,
		/* 464 */ YY_NO_ANCHOR,
		/* 465 */ YY_NO_ANCHOR,
		/* 466 */ YY_NO_ANCHOR,
		/* 467 */ YY_NO_ANCHOR,
		/* 468 */ YY_NO_ANCHOR,
		/* 469 */ YY_NO_ANCHOR,
		/* 470 */ YY_NO_ANCHOR,
		/* 471 */ YY_NO_ANCHOR,
		/* 472 */ YY_NO_ANCHOR,
		/* 473 */ YY_NO_ANCHOR,
		/* 474 */ YY_NO_ANCHOR,
		/* 475 */ YY_NO_ANCHOR,
		/* 476 */ YY_NO_ANCHOR,
		/* 477 */ YY_NO_ANCHOR,
		/* 478 */ YY_NO_ANCHOR,
		/* 479 */ YY_NO_ANCHOR,
		/* 480 */ YY_NO_ANCHOR,
		/* 481 */ YY_NO_ANCHOR,
		/* 482 */ YY_NO_ANCHOR,
		/* 483 */ YY_NO_ANCHOR,
		/* 484 */ YY_NO_ANCHOR,
		/* 485 */ YY_NO_ANCHOR,
		/* 486 */ YY_NO_ANCHOR,
		/* 487 */ YY_NO_ANCHOR,
		/* 488 */ YY_NO_ANCHOR,
		/* 489 */ YY_NO_ANCHOR,
		/* 490 */ YY_NO_ANCHOR,
		/* 491 */ YY_NO_ANCHOR,
		/* 492 */ YY_NO_ANCHOR,
		/* 493 */ YY_NO_ANCHOR,
		/* 494 */ YY_NO_ANCHOR,
		/* 495 */ YY_NO_ANCHOR,
		/* 496 */ YY_NO_ANCHOR,
		/* 497 */ YY_NO_ANCHOR,
		/* 498 */ YY_NO_ANCHOR,
		/* 499 */ YY_NO_ANCHOR,
		/* 500 */ YY_NO_ANCHOR,
		/* 501 */ YY_NO_ANCHOR,
		/* 502 */ YY_NO_ANCHOR,
		/* 503 */ YY_NO_ANCHOR,
		/* 504 */ YY_NO_ANCHOR,
		/* 505 */ YY_NO_ANCHOR,
		/* 506 */ YY_NO_ANCHOR,
		/* 507 */ YY_NO_ANCHOR,
		/* 508 */ YY_NO_ANCHOR,
		/* 509 */ YY_NO_ANCHOR,
		/* 510 */ YY_NO_ANCHOR,
		/* 511 */ YY_NO_ANCHOR,
		/* 512 */ YY_NO_ANCHOR,
		/* 513 */ YY_NO_ANCHOR,
		/* 514 */ YY_NO_ANCHOR,
		/* 515 */ YY_NO_ANCHOR,
		/* 516 */ YY_NO_ANCHOR,
		/* 517 */ YY_NO_ANCHOR,
		/* 518 */ YY_NO_ANCHOR,
		/* 519 */ YY_NO_ANCHOR,
		/* 520 */ YY_NO_ANCHOR,
		/* 521 */ YY_NO_ANCHOR,
		/* 522 */ YY_NO_ANCHOR,
		/* 523 */ YY_NO_ANCHOR,
		/* 524 */ YY_NO_ANCHOR,
		/* 525 */ YY_NO_ANCHOR,
		/* 526 */ YY_NO_ANCHOR,
		/* 527 */ YY_NO_ANCHOR,
		/* 528 */ YY_NO_ANCHOR,
		/* 529 */ YY_NO_ANCHOR,
		/* 530 */ YY_NO_ANCHOR,
		/* 531 */ YY_NO_ANCHOR,
		/* 532 */ YY_NO_ANCHOR,
		/* 533 */ YY_NO_ANCHOR,
		/* 534 */ YY_NO_ANCHOR,
		/* 535 */ YY_NO_ANCHOR,
		/* 536 */ YY_NO_ANCHOR,
		/* 537 */ YY_NO_ANCHOR,
		/* 538 */ YY_NO_ANCHOR,
		/* 539 */ YY_NO_ANCHOR,
		/* 540 */ YY_NO_ANCHOR,
		/* 541 */ YY_NO_ANCHOR,
		/* 542 */ YY_NO_ANCHOR,
		/* 543 */ YY_NO_ANCHOR,
		/* 544 */ YY_NO_ANCHOR,
		/* 545 */ YY_NO_ANCHOR,
		/* 546 */ YY_NO_ANCHOR,
		/* 547 */ YY_NO_ANCHOR,
		/* 548 */ YY_NO_ANCHOR,
		/* 549 */ YY_NO_ANCHOR,
		/* 550 */ YY_NO_ANCHOR,
		/* 551 */ YY_NO_ANCHOR,
		/* 552 */ YY_NO_ANCHOR,
		/* 553 */ YY_NO_ANCHOR,
		/* 554 */ YY_NO_ANCHOR,
		/* 555 */ YY_NO_ANCHOR,
		/* 556 */ YY_NO_ANCHOR,
		/* 557 */ YY_NO_ANCHOR,
		/* 558 */ YY_NO_ANCHOR,
		/* 559 */ YY_NO_ANCHOR,
		/* 560 */ YY_NO_ANCHOR,
		/* 561 */ YY_NO_ANCHOR,
		/* 562 */ YY_NO_ANCHOR,
		/* 563 */ YY_NO_ANCHOR,
		/* 564 */ YY_NO_ANCHOR,
		/* 565 */ YY_NO_ANCHOR,
		/* 566 */ YY_NO_ANCHOR,
		/* 567 */ YY_NO_ANCHOR,
		/* 568 */ YY_NO_ANCHOR,
		/* 569 */ YY_NOT_ACCEPT,
		/* 570 */ YY_NO_ANCHOR,
		/* 571 */ YY_NOT_ACCEPT,
		/* 572 */ YY_NO_ANCHOR,
		/* 573 */ YY_NO_ANCHOR,
		/* 574 */ YY_NO_ANCHOR,
		/* 575 */ YY_NO_ANCHOR,
		/* 576 */ YY_NO_ANCHOR,
		/* 577 */ YY_NO_ANCHOR,
		/* 578 */ YY_NO_ANCHOR,
		/* 579 */ YY_NO_ANCHOR,
		/* 580 */ YY_NO_ANCHOR,
		/* 581 */ YY_NO_ANCHOR,
		/* 582 */ YY_NO_ANCHOR,
		/* 583 */ YY_NO_ANCHOR,
		/* 584 */ YY_NO_ANCHOR,
		/* 585 */ YY_NO_ANCHOR,
		/* 586 */ YY_NO_ANCHOR,
		/* 587 */ YY_NO_ANCHOR,
		/* 588 */ YY_NO_ANCHOR,
		/* 589 */ YY_NO_ANCHOR,
		/* 590 */ YY_NO_ANCHOR,
		/* 591 */ YY_NO_ANCHOR,
		/* 592 */ YY_NO_ANCHOR,
		/* 593 */ YY_NO_ANCHOR,
		/* 594 */ YY_NO_ANCHOR,
		/* 595 */ YY_NO_ANCHOR,
		/* 596 */ YY_NO_ANCHOR,
		/* 597 */ YY_NO_ANCHOR,
		/* 598 */ YY_NO_ANCHOR,
		/* 599 */ YY_NO_ANCHOR,
		/* 600 */ YY_NO_ANCHOR,
		/* 601 */ YY_NO_ANCHOR,
		/* 602 */ YY_NO_ANCHOR,
		/* 603 */ YY_NO_ANCHOR,
		/* 604 */ YY_NO_ANCHOR,
		/* 605 */ YY_NO_ANCHOR,
		/* 606 */ YY_NO_ANCHOR,
		/* 607 */ YY_NO_ANCHOR,
		/* 608 */ YY_NO_ANCHOR,
		/* 609 */ YY_NO_ANCHOR,
		/* 610 */ YY_NO_ANCHOR,
		/* 611 */ YY_NO_ANCHOR,
		/* 612 */ YY_NO_ANCHOR,
		/* 613 */ YY_NO_ANCHOR,
		/* 614 */ YY_NO_ANCHOR,
		/* 615 */ YY_NO_ANCHOR,
		/* 616 */ YY_NO_ANCHOR,
		/* 617 */ YY_NO_ANCHOR,
		/* 618 */ YY_NO_ANCHOR,
		/* 619 */ YY_NO_ANCHOR,
		/* 620 */ YY_NO_ANCHOR,
		/* 621 */ YY_NO_ANCHOR,
		/* 622 */ YY_NO_ANCHOR,
		/* 623 */ YY_NO_ANCHOR,
		/* 624 */ YY_NO_ANCHOR,
		/* 625 */ YY_NO_ANCHOR,
		/* 626 */ YY_NO_ANCHOR,
		/* 627 */ YY_NO_ANCHOR,
		/* 628 */ YY_NO_ANCHOR,
		/* 629 */ YY_NO_ANCHOR,
		/* 630 */ YY_NO_ANCHOR,
		/* 631 */ YY_NO_ANCHOR,
		/* 632 */ YY_NO_ANCHOR,
		/* 633 */ YY_NO_ANCHOR,
		/* 634 */ YY_NO_ANCHOR,
		/* 635 */ YY_NO_ANCHOR,
		/* 636 */ YY_NO_ANCHOR,
		/* 637 */ YY_NO_ANCHOR,
		/* 638 */ YY_NO_ANCHOR,
		/* 639 */ YY_NO_ANCHOR,
		/* 640 */ YY_NO_ANCHOR,
		/* 641 */ YY_NO_ANCHOR,
		/* 642 */ YY_NO_ANCHOR,
		/* 643 */ YY_NO_ANCHOR,
		/* 644 */ YY_NO_ANCHOR,
		/* 645 */ YY_NO_ANCHOR,
		/* 646 */ YY_NO_ANCHOR,
		/* 647 */ YY_NO_ANCHOR,
		/* 648 */ YY_NO_ANCHOR,
		/* 649 */ YY_NO_ANCHOR,
		/* 650 */ YY_NO_ANCHOR,
		/* 651 */ YY_NO_ANCHOR,
		/* 652 */ YY_NO_ANCHOR,
		/* 653 */ YY_NO_ANCHOR,
		/* 654 */ YY_NO_ANCHOR,
		/* 655 */ YY_NO_ANCHOR,
		/* 656 */ YY_NO_ANCHOR,
		/* 657 */ YY_NO_ANCHOR,
		/* 658 */ YY_NO_ANCHOR,
		/* 659 */ YY_NO_ANCHOR,
		/* 660 */ YY_NO_ANCHOR,
		/* 661 */ YY_NO_ANCHOR,
		/* 662 */ YY_NO_ANCHOR,
		/* 663 */ YY_NO_ANCHOR,
		/* 664 */ YY_NO_ANCHOR,
		/* 665 */ YY_NO_ANCHOR,
		/* 666 */ YY_NO_ANCHOR,
		/* 667 */ YY_NO_ANCHOR,
		/* 668 */ YY_NO_ANCHOR,
		/* 669 */ YY_NO_ANCHOR,
		/* 670 */ YY_NO_ANCHOR,
		/* 671 */ YY_NO_ANCHOR,
		/* 672 */ YY_NO_ANCHOR,
		/* 673 */ YY_NO_ANCHOR,
		/* 674 */ YY_NO_ANCHOR,
		/* 675 */ YY_NO_ANCHOR,
		/* 676 */ YY_NO_ANCHOR,
		/* 677 */ YY_NO_ANCHOR,
		/* 678 */ YY_NO_ANCHOR,
		/* 679 */ YY_NO_ANCHOR,
		/* 680 */ YY_NO_ANCHOR,
		/* 681 */ YY_NO_ANCHOR,
		/* 682 */ YY_NO_ANCHOR,
		/* 683 */ YY_NO_ANCHOR,
		/* 684 */ YY_NO_ANCHOR,
		/* 685 */ YY_NO_ANCHOR,
		/* 686 */ YY_NO_ANCHOR,
		/* 687 */ YY_NO_ANCHOR,
		/* 688 */ YY_NO_ANCHOR,
		/* 689 */ YY_NO_ANCHOR,
		/* 690 */ YY_NO_ANCHOR,
		/* 691 */ YY_NO_ANCHOR,
		/* 692 */ YY_NO_ANCHOR,
		/* 693 */ YY_NO_ANCHOR,
		/* 694 */ YY_NO_ANCHOR,
		/* 695 */ YY_NO_ANCHOR,
		/* 696 */ YY_NO_ANCHOR,
		/* 697 */ YY_NO_ANCHOR,
		/* 698 */ YY_NO_ANCHOR,
		/* 699 */ YY_NO_ANCHOR,
		/* 700 */ YY_NO_ANCHOR,
		/* 701 */ YY_NO_ANCHOR,
		/* 702 */ YY_NO_ANCHOR,
		/* 703 */ YY_NO_ANCHOR,
		/* 704 */ YY_NO_ANCHOR,
		/* 705 */ YY_NO_ANCHOR,
		/* 706 */ YY_NO_ANCHOR,
		/* 707 */ YY_NO_ANCHOR,
		/* 708 */ YY_NO_ANCHOR,
		/* 709 */ YY_NO_ANCHOR,
		/* 710 */ YY_NO_ANCHOR,
		/* 711 */ YY_NO_ANCHOR
	};
	private int yy_cmap[] = unpackFromString(1,258,
"6:9,1,2,6,1,3,6:18,1,52,5,23,11,50,51,7,31,32,29,27,25,28,26,30,54:8,49:2,4" +
",24,34,33,35,6:2,20,36,14,17,9,42,41,40,12,48,46,15,10,13,37,38,44,8,18,19," +
"16,39,43,45,21,47,6,58,6,22,6:2,56:4,57,56,48,55,48:6,53,48:11,6:133,0:2")[0];

	private int yy_rmap[] = unpackFromString(1,712,
"0,1,2,3,4,5,6,1:4,7,8:2,1:5,9,10,11,1:7,12:2,13,12,14,1:3,12:5,15,12,16,12:" +
"5,17,18,12:2,19,12:3,20,12:3,21,12:2,22,12:2,23,12:10,24,25,12:14,1,12:6,26" +
",12,1,12:20,1,12:7,1,12:8,27,12:2,28,29,12:7,1,12:3,1,12:7,1,12:14,1:2,30,1" +
":4,12:4,1:2,12:5,1,12:12,31,12:2,1,12:8,32,12:2,33,12:2,1,12,1:3,12:4,1,34," +
"35,36,1:3,37,38,1:4,39,40,1,41,42,1,43,44,45,46,47,48,49,50,51,52,53,54,7,1" +
",55,1:3,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,50,7" +
"7,78,79,80,81,82,12,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100," +
"101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,54,117,118," +
"119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137" +
",138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,15" +
"6,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,1" +
"75,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193," +
"194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212" +
",213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,23" +
"1,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,2" +
"50,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268," +
"269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287" +
",288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,30" +
"6,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,3" +
"25,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343," +
"344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362" +
",363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,38" +
"1,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,4" +
"00,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418," +
"419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437" +
",438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,45" +
"6,457,458,459,460,461,462,463,464,12,465,466,467,468,469,470,471,472,473,47" +
"4,475,476,477,478,479,480,481,482,483,484,485,486,487")[0];

	private int yy_nxt[][] = unpackFromString(488,59,
"1,2,3,259,271,4,-1,5,6,563,603,-1,261,631,652,667,675,272,682,277,280,688,7" +
",8,9,10,11,12,13,14,15,16,17,18,19,20,693,283,697,699,701,703,286,704,688,7" +
"05,706,688:2,21,-1,258,-1,688,21,688:3,22,-1:60,2,-1:60,271,-1:60,23,-1:54," +
"5,-1:65,688,288,290,24,292,294,688:2,296,688,298,300,302,688,-1,25,-1:12,68" +
"8:13,304,26,27,28,688,304,688:3,-1:50,262,-1:4,262,-1:30,270,-1:22,21,-1:4," +
"21,-1:37,34,-1,35,-1:56,36,-1:34,276,-1:13,273,-1:2,270,-1:22,21,-1,273:2,-" +
"1,21,-1:2,276,-1:9,688:3,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304," +
"688:3,-1:9,688:3,24,688:4,416,688:5,-1,25,-1:12,688:13,304,26,27,28,688,304" +
",688:3,-1:9,688:3,24,688:2,77,688:7,-1,25,-1:12,688:13,304,26,27,28,688,304" +
",688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,453,688:11,304,26,27,28,688,304" +
",688:3,-1:2,285,-1:6,688:3,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,30" +
"4,688:3,-1:9,688,457,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304," +
"688:3,-1:9,688:3,24,688:4,458,688:5,-1,25,-1:12,688:13,304,26,27,28,688,304" +
",688:3,-1:9,688:2,464,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:2,589,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-" +
"1:9,688:3,24,688:8,471,688,-1,25,-1:12,688:10,109,688:2,304,26,27,28,688,30" +
"4,688:3,-1:9,688:3,24,599,688:2,627,688,619,476,688:3,-1,25,-1:12,688:13,30" +
"4,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:5,625,688:7,3" +
"04,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,647,688:11,3" +
"04,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:2,595,688:10" +
",304,26,27,28,688,304,688:3,-1:9,688:3,24,688:6,149,688:3,-1,25,-1:12,688:1" +
"3,304,26,27,28,688,304,688:3,-1:9,688:3,184,688:10,-1,25,-1:12,688:13,304,2" +
"6,27,28,688,304,688:3,-1:9,688:3,185,688:10,-1,25,-1:12,688:13,304,26,27,28" +
",688,304,688:3,-1:9,688:3,187,688:10,-1,25,-1:12,688:13,304,26,27,28,688,30" +
"4,688:3,-1:9,688:3,24,556,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:3,230,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",688:3,232,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3," +
"233,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1,1,263,-1:2,263:" +
"55,1,264,242,265,264,243,264:53,-1,297,242,265,297,-1,297:53,-1,246,-1:60,2" +
"74,-1:56,252,-1:60,275,-1:55,1,268,256,269,268:3,257,268:51,-1,339,256,269," +
"339:3,-1,339:51,-1:37,279,-1:2,282,-1:12,279,-1,282,-1:5,271,-1:57,5,-1:6,6" +
"88:3,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:2,320" +
",24,688,322,688:4,29,688:3,-1,25,-1:12,688,324,688:4,30,688:6,304,26,27,28," +
"688,304,688:3,-1:10,276,-1:13,273,-1:25,262,-1,273:2,-1,262,-1:2,276,-1:2,2" +
"63,-1:2,263:55,-1,264,242,297,264,-1,264:53,-1,297,242,297:2,-1,297:53,-1:2" +
",274,-1:58,275,-1:57,268,256,339,268:3,-1,268:51,-1,339,256,339:4,-1,339:51" +
",-1:8,575,352,688,24,353,688:7,354,688,-1,25,-1:12,688,31,688:11,304,26,27," +
"28,688,304,688:3,-1:50,278,-1:4,278,-1:12,576,688:2,24,573,688:7,364,365,-1" +
",25,-1:12,688,32,688:2,653,688:8,304,26,27,28,688,304,688:3,-1:24,273,-1:25" +
",278,-1,273:2,-1,278,-1:58,281,-1:12,688:3,24,688,366,570,578,688:2,33,367," +
"688:2,-1,25,-1:12,368,688,581,688:10,304,26,27,28,688,304,688:3,-1:52,273,-" +
"1:2,281,-1:13,284,-1:4,284,-1:2,284,-1:2,284,-1:15,284,-1:5,284,-1:6,284,-1" +
":4,284,-1,284:2,-1:9,37,688:2,24,688,38,579,688,369,688:5,-1,25,-1:12,688:2" +
",370,688:3,371,688:6,304,26,27,28,688,304,688:3,-1:10,284,-1:4,284,-1:2,284" +
",-1:2,284,-1:15,284,-1:5,284,-1:6,284,-1,273,-1:2,284,-1,284:2,-1:2,285,-1:" +
"16,287,-1:48,688:3,24,380,39,688:2,606,688:5,-1,25,-1:12,688,381,688:11,304" +
",26,27,28,688,304,688:3,-1:10,289,-1:57,688:2,260,24,688:5,670,386,580,387," +
"688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:16,291,-1:51,688:3,24," +
"688:5,678,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:10,293,-1:" +
"57,688:3,24,688:10,-1,25,-1:12,688:5,388,688:7,304,26,27,28,688,304,688:3,-" +
"1:15,295,-1:52,688:3,24,688:5,40,688:4,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:20,239,-1:47,688:3,24,688,41,688:8,-1,25,-1:12,688:13,304,26,2" +
"7,28,688,304,688:3,-1:9,688,389,688,24,688:10,-1,25,-1:12,688:13,304,26,27," +
"28,688,304,688:3,-1,1,244:10,245,244:47,-1:8,684,688:2,24,688:10,-1,25,-1:1" +
"2,688:13,304,26,27,28,688,304,688:3,-1,1,246,247,266,248,-1:6,303,305,-1:4," +
"307,309,-1:48,688:3,24,688,390,688:8,-1,25,-1:12,688:13,304,26,27,28,688,30" +
"4,688:3,-1:13,305,-1:4,307,309,-1:53,311,-1:53,42,688:2,24,688:3,43,688,391" +
",688:2,634,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:22,313,-1:4" +
"5,688:3,24,688:5,44,688:4,-1,25,-1:12,688:3,689,688:9,304,26,27,28,688,304," +
"688:3,-1:20,315,-1:47,688:3,24,688:6,392,688:3,-1,25,-1:12,688:13,304,26,27" +
",28,688,304,688:3,-1:15,317,-1:52,688:3,24,688:10,-1,25,-1:12,688:6,45,688:" +
"6,304,26,27,28,688,304,688:3,-1:14,569,-1:53,688:3,24,688:10,-1,25,-1:12,68" +
"8:3,46,688:9,304,26,27,28,688,304,688:3,-1:21,319,-1:46,688:3,24,393,688:9," +
"-1,25,-1:12,688:2,47,688:10,304,26,27,28,688,304,688:3,-1:16,321,-1:51,688:" +
"3,24,688:5,48,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:20,325" +
",-1:47,688:3,24,688:10,-1,25,-1:12,688:2,49,688:10,304,26,27,28,688,304,688" +
":3,-1:17,327,-1:50,688:3,24,688:6,611,50,688:2,-1,25,-1:12,688:2,51,688:7,5" +
"84,688:2,304,26,27,28,688,304,688:3,-1:11,571,-1:56,688:3,24,688:2,638,688:" +
"7,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:13,329,-1:54,688:3,24,68" +
"8:10,-1,25,-1:12,688:9,395,688:3,304,26,27,28,688,304,688:3,-1:18,331,-1:49" +
",688:2,396,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:15,24" +
"9,-1:52,688:3,24,688:7,52,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:10,335,-1:57,397,688:2,24,688,398,688:8,-1,25,-1:12,688:13,304,26,27," +
"28,688,304,688:3,-1:15,250,-1:52,688,677,688,24,688,399,688:4,53,688:3,-1,2" +
"5,-1:12,688:13,304,26,27,28,688,304,688:3,-1:2,335,-1:2,251,-1:62,688,585,6" +
"88,24,688:10,-1,25,-1:12,400,688:12,304,26,27,28,688,304,688:3,-1,1,252,253" +
",267,-1:3,254,-1:59,688:3,24,688:3,402,688:2,403,688:3,-1,25,-1:12,688:13,3" +
"04,26,27,28,688,304,688:3,-1:9,688:2,54,24,688,404,688,655,688:2,55,688:3,-" +
"1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,56,688:2,57,688," +
"58,59,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,405,688:2,24" +
",688:5,694,688:2,698,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,688,60,688:5,61,688:2,-1,25,-1:12,688:6,657,688:6,304,26,27,28,68" +
"8,304,688:3,-1:9,688:3,24,688,406,688:4,407,688:3,-1,25,-1:12,688:13,304,26" +
",27,28,688,304,688:3,-1:9,688:3,24,688:8,586,688,-1,25,-1:12,688:13,304,26," +
"27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,711,688:11,304,26," +
"27,28,688,304,688:3,-1:9,688:3,24,688,409,62,688:7,-1,25,-1:12,688,410,688:" +
"3,63,64,688:6,304,26,27,28,688,304,688:3,-1:9,710,688:2,24,688:10,-1,25,-1:" +
"12,688,411,688:11,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:" +
"12,688:3,614,688:9,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:3,412,688:3" +
",702,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,413," +
"688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:2,613" +
",688:7,-1,25,-1:12,688:6,65,688:6,304,26,27,28,688,304,688:3,-1:9,688:2,66," +
"24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:7" +
",415,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,417,688,2" +
"4,688:3,640,688:3,418,688:2,-1,25,-1:12,688:5,67,688:7,304,26,27,28,688,304" +
",688:3,-1:9,688:3,24,688,68,688:8,-1,25,-1:12,688:5,588,688:7,304,26,27,28," +
"688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,69,688:12,304,26,27,28,688,3" +
"04,688:3,-1:9,420,421,688,24,615,688:7,422,688,-1,25,-1:12,688,423,688:11,3" +
"04,26,27,28,688,304,688:3,-1:9,688:3,24,688:4,618,688:5,-1,25,-1:12,688:13," +
"304,26,27,28,688,304,688:3,-1:9,688:3,24,688:2,70,688:5,641,688,-1,25,-1:12" +
",688:13,304,26,27,28,688,304,688:3,-1:9,688,639,688,24,688:8,425,688,-1,25," +
"-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688,71,688:8,-1,25,-1" +
":12,688:13,304,26,27,28,688,304,688:3,-1:9,72,688:2,24,688:10,-1,25,-1:12,6" +
"88:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688,73,688:8,-1,25,-1:12,74," +
"688:12,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:2,42" +
"8,688:10,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:5,75,688:3,76,-1,25,-" +
"1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688,78,688:8,-1,25,-1:" +
"12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:6,79,688:3,-1,25,-1:" +
"12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:7,80,688:2,-1,25,-1:" +
"12,688:13,304,26,27,28,688,304,688:3,-1:9,688,435,688,24,688:7,591,688:2,-1" +
",25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:1" +
"2,688:6,81,688:6,304,26,27,28,688,304,688:3,-1:9,688,642,688,24,643,688:9,-" +
"1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,436,688,24,688,82,688" +
":8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:7,83,688" +
":2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,661,688:2,69" +
"5,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,672,688" +
":5,84,688:3,-1,25,-1:12,688:10,441,688:2,304,26,27,28,688,304,688:3,-1:9,44" +
"3,688:2,24,688:3,85,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,688:7,86,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,688:6,445,446,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:10,-1,25,-1:12,688:9,87,688:3,304,26,27,28,688,304,688:" +
"3,-1:9,88,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,688,583,688:3,645,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304," +
"688:3,-1:9,89,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:9,90,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9," +
"688:3,24,688:3,449,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",688,451,688,24,688:4,590,688:2,587,688:2,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688:3,24,688:5,91,688:4,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:4,662,688:8,304,26,27,28," +
"688,304,688:3,-1:9,688:3,24,688:7,92,688:2,-1,25,-1:12,688:13,304,26,27,28," +
"688,304,688:3,-1:9,688:3,24,688:5,617,688:4,-1,25,-1:12,688:13,304,26,27,28" +
",688,304,688:3,-1:9,688,454,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688,93,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688:3,24,688:7,94,688:2,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688:3,95,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:7,96,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688,97,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-" +
"1:9,688:3,24,688:2,461,688:7,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:7,98,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:10,-1,25,-1:12,688:5,99,688:7,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:3,100,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:10,-1,25,-1:12,688:5,101,688:7,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:3,102,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688,103,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:6,465,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,104,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9," +
"688,105,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,68" +
"8:3,24,688:7,106,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,6" +
"88:3,24,688:7,107,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9," +
"688:3,24,688:10,-1,25,-1:12,688:5,108,688:7,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,688:10,-1,25,-1:12,688:2,110,688:10,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,688:6,111,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-" +
"1:9,688:3,24,688:10,-1,25,-1:12,688,472,688:11,304,26,27,28,688,304,688:3,-" +
"1:9,688:3,24,688,474,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,688:10,-1,25,-1:12,688:7,112,688:5,304,26,27,28,688,304,688:3,-" +
"1:9,688,477,688,24,688:8,113,688,-1,25,-1:12,688:13,304,26,27,28,688,304,68" +
"8:3,-1:9,688:3,24,688:10,-1,25,-1:12,596,688:12,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:10,-1,25,-1:12,688:10,114,688:2,304,26,27,28,688,304,688:" +
"3,-1:9,688:2,626,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,688:10,-1,25,-1:12,688:5,115,688:7,304,26,27,28,688,304,688:3,-" +
"1:9,688:3,24,479,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,6" +
"88:3,24,688:10,-1,25,-1:12,688:2,116,688:10,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,688:7,481,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,688:10,-1,25,-1:12,688:2,117,688:10,304,26,27,28,688,304,688:3,-" +
"1:9,688:3,24,688:5,118,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,681,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,688:10,-1,25,-1:12,688:2,119,688:10,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,688,120,688:8,-1,25,-1:12,688:6,484,688:6,304,26,27,28,688,304," +
"688:3,-1:9,688,121,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,68" +
"8:3,-1:9,688:3,24,688,122,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:3,24,688:8,487,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:10,-1,25,-1:12,688:2,123,688:10,304,26,27,28,688,304,68" +
"8:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:3,490,688:9,304,26,27,28,688,304,6" +
"88:3,-1:9,688,124,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:3,125,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,688,126,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9," +
"688:3,24,688:10,-1,25,-1:12,688:10,127,688:2,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,688:10,-1,25,-1:12,688:2,128,688:10,304,26,27,28,688,304,688:3,-" +
"1:9,688:3,24,688:10,-1,25,-1:12,688:2,494,688:10,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:9,129,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,688:7,130,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,688,131,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9," +
"688:3,24,688:10,-1,25,-1:12,688:7,132,688:5,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,688:6,692,688:3,-1,25,-1:12,688:2,602,688:10,304,26,27,28,688,304" +
",688:3,-1:9,688:3,133,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:4,498,688:5,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:10,-1,25,-1:12,688,134,688:11,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:5,135,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:7,136,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:3,24,688:3,137,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,68" +
"8:3,-1:9,688:2,138,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:7,139,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,140,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,141,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,68" +
"8:3,24,688:10,-1,25,-1:12,688:3,142,688:9,304,26,27,28,688,304,688:3,-1:9,6" +
"88,143,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,144" +
",688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,628,688" +
":2,24,688:10,-1,25,-1:12,688:5,696,688:7,304,26,27,28,688,304,688:3,-1:9,68" +
"8:3,24,688:7,145,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,6" +
"88:3,24,688:9,507,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3," +
"24,688:3,146,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3" +
",24,688:3,508,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,147," +
"688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24" +
",688:3,148,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,2" +
"4,688:8,665,688,-1,25,-1:12,688,510,688:11,304,26,27,28,688,304,688:3,-1:9," +
"688:3,24,688:7,150,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",151,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,152" +
",688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,2" +
"4,688,153,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,15" +
"4,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,512,688,24," +
"688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:3,15" +
"5,688:3,515,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3," +
"24,688:2,518,688:7,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3" +
",24,688:3,156,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:" +
"3,24,688:10,-1,25,-1:12,688:5,157,688:7,304,26,27,28,688,304,688:3,-1:9,688" +
":3,24,688,520,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:" +
"3,24,688,524,688:5,525,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,158,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,68" +
"8:3,24,688:10,-1,25,-1:12,688:2,159,688:10,304,26,27,28,688,304,688:3,-1:9," +
"688:3,24,688,532,688:8,-1,25,-1:12,688:5,160,688:7,304,26,27,28,688,304,688" +
":3,-1:9,688:3,24,688:10,-1,25,-1:12,688:10,161,688:2,304,26,27,28,688,304,6" +
"88:3,-1:9,688:3,24,533,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:5,162,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:3,163,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:10,-1,25,-1:12,688:6,164,688:6,304,26,27,28,688,304,688" +
":3,-1:9,165,688:2,166,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:6,537,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:6,167,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,540,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,688:5,168,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-" +
"1:9,688,169,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,688:3,170,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,688:10,-1,25,-1:12,688,542,688:11,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,688:7,171,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-" +
"1:9,688:3,24,688:9,172,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,6" +
"88:3,24,688:7,173,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9," +
"688:3,24,688:7,651,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,688:7,174,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,688:10,-1,25,-1:12,175,688:12,304,26,27,28,688,304,688:3,-1:9,68" +
"8,176,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:" +
"3,24,688:10,-1,25,-1:12,688:4,177,688:8,304,26,27,28,688,304,688:3,-1:9,688" +
",178,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,1" +
"79,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,2" +
"4,688,180,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,18" +
"1,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,182,688:1" +
"0,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:2,183,24,688:10,-1" +
",25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,186,688:10,-1,25,-1:" +
"12,688:13,304,26,27,28,688,304,688:3,-1:9,688,188,688,24,688:10,-1,25,-1:12" +
",688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688,189,688:8,-1,25,-1:12," +
"688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688,190,688:8,-1,25,-1:12,6" +
"88:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:6,191" +
",688:6,304,26,27,28,688,304,688:3,-1:9,688:3,192,688:10,-1,25,-1:12,688:13," +
"304,26,27,28,688,304,688:3,-1:9,688:3,193,688:10,-1,25,-1:12,688:13,304,26," +
"27,28,688,304,688:3,-1:9,688:3,24,688:5,194,688:4,-1,25,-1:12,688:13,304,26" +
",27,28,688,304,688:3,-1:9,688,195,688,24,688:10,-1,25,-1:12,688:13,304,26,2" +
"7,28,688,304,688:3,-1:9,688:3,24,688:7,196,688:2,-1,25,-1:12,688:13,304,26," +
"27,28,688,304,688:3,-1:9,688:3,24,688:7,197,688:2,-1,25,-1:12,688:13,304,26" +
",27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:10,198,688:2,304," +
"26,27,28,688,304,688:3,-1:9,688:3,199,688:10,-1,25,-1:12,688:13,304,26,27,2" +
"8,688,304,688:3,-1:9,688:3,24,688:5,200,688:4,-1,25,-1:12,688:13,304,26,27," +
"28,688,304,688:3,-1:9,688:3,24,688:7,201,688:2,-1,25,-1:12,688:13,304,26,27" +
",28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:5,202,688:7,304,26,2" +
"7,28,688,304,688:3,-1:9,688:3,24,688:3,203,688:6,-1,25,-1:12,688:13,304,26," +
"27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:5,204,688:7,304,26" +
",27,28,688,304,688:3,-1:9,205,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27," +
"28,688,304,688:3,-1:9,688,206,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28" +
",688,304,688:3,-1:9,688:3,24,688:7,207,688:2,-1,25,-1:12,688:13,304,26,27,2" +
"8,688,304,688:3,-1:9,688:2,208,24,688:10,-1,25,-1:12,688:13,304,26,27,28,68" +
"8,304,688:3,-1:9,688,209,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688:3,24,688:3,210,688:6,-1,25,-1:12,688:13,304,26,27,28,688" +
",304,688:3,-1:9,688:3,24,688,211,688:8,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:5,212,688:7,304,26,27,28,688" +
",304,688:3,-1:9,688:3,24,688:2,213,688:7,-1,25,-1:12,688:13,304,26,27,28,68" +
"8,304,688:3,-1:9,688:2,214,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,30" +
"4,688:3,-1:9,688:3,215,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:5,216,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:6,217,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:3,24,688:4,666,688:5,-1,25,-1:12,688:13,304,26,27,28,688,304,68" +
"8:3,-1:9,688:3,24,688:5,218,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,6" +
"88:3,-1:9,688:3,24,688:9,219,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:7,220,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688,221,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3," +
"-1:9,688:3,24,688:7,222,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:10,-1,25,-1:12,688:5,223,688:7,304,26,27,28,688,304,688:" +
"3,-1:9,224,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,555,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,68" +
"8:3,24,688:10,-1,25,-1:12,688:7,225,688:5,304,26,27,28,688,304,688:3,-1:9,6" +
"88,226,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688" +
":3,24,688,227,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:" +
"3,24,688:4,557,688:5,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,228" +
",688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,2" +
"4,688:5,558,688:4,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,22" +
"9,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,231," +
"688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,6" +
"88:10,-1,25,-1:12,688,560,688:11,304,26,27,28,688,304,688:3,-1:9,688:3,24,6" +
"88:10,-1,25,-1:12,688:11,561,688,304,26,27,28,688,304,688:3,-1:9,688:3,24,6" +
"88:10,-1,25,-1:12,688:2,562,688:10,304,26,27,28,688,304,688:3,-1:9,688:3,23" +
"4,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,235,688,24," +
"688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688,236," +
"688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,237,688,24,688" +
":10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:7,238,6" +
"88:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,306,688:2,24,688,30" +
"8,688,310,688:6,-1,25,-1:12,688,312,688:6,314,316,688:3,304,26,27,28,688,30" +
"4,688:3,-1:9,688:3,24,688:5,394,688:4,-1,25,-1:12,688:13,304,26,27,28,688,3" +
"04,688:3,-1:9,688,408,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304" +
",688:3,-1:9,659,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:3,24,688,594,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:6,592,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:21,323,-1:46,688:3,24,688:2,685,688:7,-1,25,-1:12,688:13,304,26,27,28" +
",688,304,688:3,-1:13,333,-1:54,688:3,24,688:10,-1,25,-1:12,688:9,444,688:3," +
"304,26,27,28,688,304,688:3,-1:9,688:2,679,24,688:10,-1,25,-1:12,688:13,304," +
"26,27,28,688,304,688:3,-1:9,582,688:2,24,688,401,688:8,-1,25,-1:12,688:13,3" +
"04,26,27,28,688,304,688:3,-1:9,688:3,24,688:8,414,688,-1,25,-1:12,688:13,30" +
"4,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,427,688:11,30" +
"4,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:3,646,688:9,3" +
"04,26,27,28,688,304,688:3,-1:9,688:3,24,430,688:9,-1,25,-1:12,688:13,304,26" +
",27,28,688,304,688:3,-1:9,688:3,24,688:7,434,688:2,-1,25,-1:12,688:13,304,2" +
"6,27,28,688,304,688:3,-1:9,688:3,24,688:4,593,688:5,-1,25,-1:12,688:13,304," +
"26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688:2,690,688:10,30" +
"4,26,27,28,688,304,688:3,-1:9,688:3,24,688:3,621,688:6,-1,25,-1:12,688:13,3" +
"04,26,27,28,688,304,688:3,-1:9,688:3,24,688:5,601,688:4,-1,25,-1:12,688:13," +
"304,26,27,28,688,304,688:3,-1:9,688,459,688,24,688:10,-1,25,-1:12,688:13,30" +
"4,26,27,28,688,304,688:3,-1:9,688:3,24,688:2,463,688:7,-1,25,-1:12,688:13,3" +
"04,26,27,28,688,304,688:3,-1:9,688:3,24,688:6,470,688:3,-1,25,-1:12,688:13," +
"304,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,600,688:11," +
"304,26,27,28,688,304,688:3,-1:9,688:3,24,688,673,688:8,-1,25,-1:12,688:13,3" +
"04,26,27,28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,511,688:12,304,2" +
"6,27,28,688,304,688:3,-1:9,688:2,502,24,688:10,-1,25,-1:12,688:13,304,26,27" +
",28,688,304,688:3,-1:9,688:3,24,492,688:9,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688:3,24,688:7,664,688:2,-1,25,-1:12,688:13,304,26,27,28," +
"688,304,688:3,-1:9,503,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688:3,24,688:8,488,688,-1,25,-1:12,688:13,304,26,27,28,688,3" +
"04,688:3,-1:9,688:3,24,688:4,541,688:5,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688:3,24,688:3,526,688:6,-1,25,-1:12,688:13,304,26,27,28,688" +
",304,688:3,-1:9,688,519,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,3" +
"04,688:3,-1:9,688:3,24,688:2,527,688:7,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688:3,24,688,521,688:8,-1,25,-1:12,688:13,304,26,27,28,688,3" +
"04,688:3,-1:9,548,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,6" +
"88:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,547,688:11,304,26,27,28,688,304,6" +
"88:3,-1:9,688:3,24,688:7,545,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304," +
"688:3,-1:9,688:3,24,564,688:9,-1,25,-1:12,688,318,688:11,304,26,27,28,688,3" +
"04,688:3,-1:9,688:3,24,688:5,424,688:4,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688,671,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,30" +
"4,688:3,-1:9,688:3,24,688,660,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304" +
",688:3,-1:9,688:3,24,688:6,433,688:3,-1,25,-1:12,688:13,304,26,27,28,688,30" +
"4,688:3,-1:9,688:3,24,688:8,426,688,-1,25,-1:12,688:13,304,26,27,28,688,304" +
",688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,624,688:11,304,26,27,28,688,304" +
",688:3,-1:9,688:3,24,622,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,688:3,24,688:7,456,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:3,24,688:4,475,688:5,-1,25,-1:12,688:13,304,26,27,28,688,304,68" +
"8:3,-1:9,688:3,24,688:3,663,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,6" +
"88:3,-1:9,688,691,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688" +
":3,-1:9,688:3,24,688:2,480,688:7,-1,25,-1:12,688:13,304,26,27,28,688,304,68" +
"8:3,-1:9,688:3,24,688:6,597,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,6" +
"88:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,506,688:11,304,26,27,28,688,304,6" +
"88:3,-1:9,688:3,24,688,482,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,68" +
"8:3,-1:9,688:3,24,688:10,-1,25,-1:12,523,688:12,304,26,27,28,688,304,688:3," +
"-1:9,688:2,505,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9" +
",688:3,24,509,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:" +
"3,24,688:7,499,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,629" +
",688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,2" +
"4,688:8,489,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24" +
",688:3,529,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,528" +
",688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24," +
"688,522,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,550,688:2," +
"24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:1" +
"0,-1,25,-1:12,688,549,688:11,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:7" +
",546,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,326,688,2" +
"4,688:8,328,688,-1,25,-1:12,688,330,688:11,304,26,27,28,688,304,688:3,-1:9," +
"688,419,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,68" +
"8:3,24,688,447,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688" +
":3,24,688:6,455,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,68" +
"8:3,24,688:8,432,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688" +
":3,24,688:10,-1,25,-1:12,688,438,688:11,304,26,27,28,688,304,688:3,-1:9,688" +
":3,24,448,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24" +
",688:7,460,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,2" +
"4,688:3,483,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,59" +
"8,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24" +
",688:2,674,688:7,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,2" +
"4,688:6,687,688:3,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3," +
"24,688,493,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:2,5" +
"13,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,68" +
"8:7,500,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,6" +
"88:8,491,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,68" +
"8:3,538,688:6,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,531,68" +
"8,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688" +
",539,688:8,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,553,688:2,24," +
"688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:7,55" +
"4,688:2,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,332,688" +
":2,334,688,336,574,688,338,688,-1,25,-1:12,688,340,688,341,342,688:8,304,26" +
",27,28,688,304,688:3,-1:9,688,429,688,24,688:10,-1,25,-1:12,688:13,304,26,2" +
"7,28,688,304,688:3,-1:9,688:3,24,688:8,437,688,-1,25,-1:12,688:13,304,26,27" +
",28,688,304,688:3,-1:9,688:3,24,688:10,-1,25,-1:12,688,466,688:11,304,26,27" +
",28,688,304,688:3,-1:9,688:3,24,658,688:9,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688:3,24,688:7,469,688:2,-1,25,-1:12,688:13,304,26,27,28," +
"688,304,688:3,-1:9,688:3,24,688:3,501,688:6,-1,25,-1:12,688:13,304,26,27,28" +
",688,304,688:3,-1:9,688,648,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688:3,24,688:2,630,688:7,-1,25,-1:12,688:13,304,26,27,28," +
"688,304,688:3,-1:9,688:3,24,688,495,688:8,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688:3,24,688:7,504,688:2,-1,25,-1:12,688:13,304,26,27,28," +
"688,304,688:3,-1:9,688:3,24,688:8,650,688,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688,534,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688" +
",304,688:3,-1:9,688:3,24,688,552,688:8,-1,25,-1:12,688:13,304,26,27,28,688," +
"304,688:3,-1:9,688:3,24,688:7,559,688:2,-1,25,-1:12,688:13,304,26,27,28,688" +
",304,688:3,-1:9,688,343,688,24,344,688,345,688:3,565,707,688:2,-1,25,-1:12," +
"346,347,348,688:10,304,26,27,28,688,304,688:3,-1:9,688,431,688,24,688:10,-1" +
",25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:8,439,688,-1," +
"25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,450,688:9,-1,25,-1" +
":12,688:13,304,26,27,28,688,304,688:3,-1:9,688,478,688,24,688:10,-1,25,-1:1" +
"2,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688,497,688:8,-1,25,-1:12" +
",688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:8,530,688,-1,25,-1:12," +
"688:13,304,26,27,28,688,304,688:3,-1:9,688,535,688,24,688:10,-1,25,-1:12,68" +
"8:13,304,26,27,28,688,304,688:3,-1:9,688,349,688,24,688,350,708,688:3,351,6" +
"88:3,-1,25,-1:12,709,688:12,304,26,27,28,688,304,688:3,-1:9,688,440,688,24," +
"688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688:8,46" +
"2,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,452,688:9" +
",-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,485,688,24,688:10,-" +
"1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,688,514,688:8,-1" +
",25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,536,688,24,688:10,-1,2" +
"5,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,355,688,24,356,688,566,6" +
"05,357,688,632,358,604,568,-1,25,-1:12,688,359,360,688,361,362,688,608,363," +
"688:4,304,26,27,28,688,304,688:3,-1:9,688,442,688,24,688:10,-1,25,-1:12,688" +
":13,304,26,27,28,688,304,688:3,-1:9,688:3,24,620,688:9,-1,25,-1:12,688:13,3" +
"04,26,27,28,688,304,688:3,-1:9,688,486,688,24,688:10,-1,25,-1:12,688:13,304" +
",26,27,28,688,304,688:3,-1:9,688:3,24,688,516,688:8,-1,25,-1:12,688:13,304," +
"26,27,28,688,304,688:3,-1:9,688,543,688,24,688:10,-1,25,-1:12,688:13,304,26" +
",27,28,688,304,688:3,-1:9,688:3,24,623,688:9,-1,25,-1:12,688:13,304,26,27,2" +
"8,688,304,688:3,-1:9,688,649,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28," +
"688,304,688:3,-1:9,688:3,24,688,517,688:8,-1,25,-1:12,688:13,304,26,27,28,6" +
"88,304,688:3,-1:9,688,544,688,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688" +
",304,688:3,-1:9,688,668,688,24,567,688:2,609,688:2,635,688,607,577,-1,25,-1" +
":12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,467,688:9,-1,25,-1:12,6" +
"88:13,304,26,27,28,688,304,688:3,-1:9,688,496,688,24,688:10,-1,25,-1:12,688" +
":13,304,26,27,28,688,304,688:3,-1:9,688,551,688,24,688:10,-1,25,-1:12,688:1" +
"3,304,26,27,28,688,304,688:3,-1:9,372,373,654,24,688:2,636,669,374,688,676," +
"688,375,688,-1,25,-1:12,688,376,688:11,304,26,27,28,688,304,688:3,-1:9,688:" +
"3,24,468,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24," +
"683,688:7,377,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3," +
"24,644,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,572,688" +
",24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688:3,24,473," +
"688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688,378,688,24,688" +
":10,-1,25,-1:12,688,379,688:11,304,26,27,28,688,304,688:3,-1:9,610,633,688," +
"24,382,688:7,637,688,-1,25,-1:12,688:4,656,688:8,304,26,27,28,688,304,688:3" +
",-1:9,688:3,24,688:10,-1,25,-1:12,688,383,688:11,304,26,27,28,688,304,688:3" +
",-1:9,688,384,688,24,385,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:" +
"3,-1:9,700,688:2,24,688:10,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1" +
":9,688:3,24,688:8,616,688,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,688:10,-1,25,-1:12,688,612,688:11,304,26,27,28,688,304,688:3,-1:" +
"9,688:3,24,686,688:9,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1:9,688" +
":3,24,688:4,680,688:5,-1,25,-1:12,688:13,304,26,27,28,688,304,688:3,-1");

	public java_cup.runtime.Symbol next_token ()
		throws java.io.IOException {
		int yy_lookahead;
		int yy_anchor = YY_NO_ANCHOR;
		int yy_state = yy_state_dtrans[yy_lexical_state];
		int yy_next_state = YY_NO_STATE;
		int yy_last_accept_state = YY_NO_STATE;
		boolean yy_initial = true;
		int yy_this_accept;

		yy_mark_start();
		yy_this_accept = yy_acpt[yy_state];
		if (YY_NOT_ACCEPT != yy_this_accept) {
			yy_last_accept_state = yy_state;
			yy_mark_end();
		}
		while (true) {
			if (yy_initial && yy_at_bol) yy_lookahead = YY_BOL;
			else yy_lookahead = yy_advance();
			yy_next_state = YY_F;
			yy_next_state = yy_nxt[yy_rmap[yy_state]][yy_cmap[yy_lookahead]];
			if (YY_EOF == yy_lookahead && true == yy_initial) {

   //System.out.println("eof");
   //if ((state==UNTERMINATED_STRING)&&(!handled_unterminated_string))
   //{
   //handled_unterminated_string=true;
   //return new Symbol(Sym.error,
   //    new TokenValue(yytext(), yyline, yychar, sourceFilename));
   //}
   return new Symbol(Sym.EOF,null);
			}
			if (YY_F != yy_next_state) {
				yy_state = yy_next_state;
				yy_initial = false;
				yy_this_accept = yy_acpt[yy_state];
				if (YY_NOT_ACCEPT != yy_this_accept) {
					yy_last_accept_state = yy_state;
					yy_mark_end();
				}
			}
			else {
				if (YY_NO_STATE == yy_last_accept_state) {
					throw (new Error("Lexical Error: Unmatched Input."));
				}
				else {
					yy_anchor = yy_acpt[yy_last_accept_state];
					if (0 != (YY_END & yy_anchor)) {
						yy_move_end();
					}
					yy_to_mark();
					switch (yy_last_accept_state) {
					case 1:
						
					case -2:
						break;
					case 2:
						{ /* do nothing **********************************/
                    /*  Note:  LABEL regexp is unused because JLex has         */
                    /*        nonstandard behavior for start-of-line character */
                    /*        which is to discard the newline before it!       */  }
					case -3:
						break;
					case 3:
						{  return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -4:
						break;
					case 4:
						{  yybegin(sYYSTRING);  }
					case -5:
						break;
					case 5:
						{   yybegin(sYYREMSTART); /* note: this will allow REM$STATIC */ }
					case -6:
						break;
					case 6:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -7:
						break;
					case 7:
						{   return new Symbol(Sym.tCARET, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -8:
						break;
					case 8:
						{    return new Symbol(Sym.tPOUND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -9:
						break;
					case 9:
						{    return new Symbol(Sym.tSEMI, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -10:
						break;
					case 10:
						{    return new Symbol(Sym.tCOMMA, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -11:
						break;
					case 11:
						{    return new Symbol(Sym.tPERIOD, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -12:
						break;
					case 12:
						{    return new Symbol(Sym.tPLUS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -13:
						break;
					case 13:
						{    return new Symbol(Sym.tMINUS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -14:
						break;
					case 14:
						{    return new Symbol(Sym.tTIMES, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -15:
						break;
					case 15:
						{    return new Symbol(Sym.tDIVIDE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -16:
						break;
					case 16:
						{    return new Symbol(Sym.tLPAREN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -17:
						break;
					case 17:
						{    return new Symbol(Sym.tRPAREN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -18:
						break;
					case 18:
						{    return new Symbol(Sym.tASSIGN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -19:
						break;
					case 19:
						{    return new Symbol(Sym.tLT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -20:
						break;
					case 20:
						{    return new Symbol(Sym.tGT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -21:
						break;
					case 21:
						{   return new Symbol(Sym.tNUM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -22:
						break;
					case 22:
						{   return new Symbol(Sym.tIDIV, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -23:
						break;
					case 23:
						{   return new Symbol(Sym.tSTRINGTEXT, new TokenValue("",yyline,yychar,sourceFilename)); }
					case -24:
						break;
					case 24:
						{   return new Symbol(Sym.tSTRINGVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -25:
						break;
					case 25:
						{   return new Symbol(Sym.tDOUBLEVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -26:
						break;
					case 26:
						{   return new Symbol(Sym.tINTEGERVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -27:
						break;
					case 27:
						{   return new Symbol(Sym.tLONGVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -28:
						break;
					case 28:
						{   return new Symbol(Sym.tSINGLEVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -29:
						break;
					case 29:
						{    return new Symbol(Sym.tIS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -30:
						break;
					case 30:
						{    return new Symbol(Sym.tIF, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -31:
						break;
					case 31:
						{    return new Symbol(Sym.tDO, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -32:
						break;
					case 32:
						{    return new Symbol(Sym.tTO, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -33:
						break;
					case 33:
						{    return new Symbol(Sym.tAS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -34:
						break;
					case 34:
						{    return new Symbol(Sym.tLE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -35:
						break;
					case 35:
						{    return new Symbol(Sym.tNE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -36:
						break;
					case 36:
						{    return new Symbol(Sym.tGE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -37:
						break;
					case 37:
						{    return new Symbol(Sym.tOR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -38:
						break;
					case 38:
						{    return new Symbol(Sym.tON, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -39:
						break;
					case 39:
						{    return new Symbol(Sym.tFN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -40:
						break;
					case 40:
						{    return new Symbol(Sym.tRND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -41:
						break;
					case 41:
						{    return new Symbol(Sym.tRUN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -42:
						break;
					case 42:
						{    return new Symbol(Sym.tERR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -43:
						break;
					case 43:
						{    return new Symbol(Sym.tERL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -44:
						break;
					case 44:
						{    return new Symbol(Sym.tEND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -45:
						break;
					case 45:
						{    return new Symbol(Sym.tEOF, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -46:
						break;
					case 46:
						{    return new Symbol(Sym.tEQV, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -47:
						break;
					case 47:
						{    return new Symbol(Sym.tEXP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -48:
						break;
					case 48:
						{    return new Symbol(Sym.tMOD, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -49:
						break;
					case 49:
						{    return new Symbol(Sym.tIMP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -50:
						break;
					case 50:
						{    return new Symbol(Sym.tINT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -51:
						break;
					case 51:
						{    return new Symbol(Sym.tINP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -52:
						break;
					case 52:
						{    return new Symbol(Sym.tNOT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -53:
						break;
					case 53:
						{    return new Symbol(Sym.tCLS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -54:
						break;
					case 54:
						{    return new Symbol(Sym.tCOM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -55:
						break;
					case 55:
						{    return new Symbol(Sym.tCOS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -56:
						break;
					case 56:
						{    return new Symbol(Sym.tCVI, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -57:
						break;
					case 57:
						{    return new Symbol(Sym.tCVL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -58:
						break;
					case 58:
						{    return new Symbol(Sym.tCVD, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -59:
						break;
					case 59:
						{    return new Symbol(Sym.tCVS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -60:
						break;
					case 60:
						{    return new Symbol(Sym.tLEN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -61:
						break;
					case 61:
						{    return new Symbol(Sym.tLET, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -62:
						break;
					case 62:
						{    return new Symbol(Sym.tLOC, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -63:
						break;
					case 63:
						{    return new Symbol(Sym.tLOG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -64:
						break;
					case 64:
						{    return new Symbol(Sym.tLOF, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -65:
						break;
					case 65:
						{    return new Symbol(Sym.tDEF, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -66:
						break;
					case 66:
						{    return new Symbol(Sym.tDIM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -67:
						break;
					case 67:
						{    return new Symbol(Sym.tSEG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -68:
						break;
					case 68:
						{    return new Symbol(Sym.tSIN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -69:
						break;
					case 69:
						{    return new Symbol(Sym.tSUB, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -70:
						break;
					case 70:
						{    return new Symbol(Sym.tSPC, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -71:
						break;
					case 71:
						{    return new Symbol(Sym.tSGN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -72:
						break;
					case 72:
						{    return new Symbol(Sym.tSQR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -73:
						break;
					case 73:
						{    return new Symbol(Sym.tTAN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -74:
						break;
					case 74:
						{    return new Symbol(Sym.tTAB, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -75:
						break;
					case 75:
						{    return new Symbol(Sym.tAND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -76:
						break;
					case 76:
						{    return new Symbol(Sym.tANY, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -77:
						break;
					case 77:
						{    return new Symbol(Sym.tASC, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -78:
						break;
					case 78:
						{    return new Symbol(Sym.tATN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -79:
						break;
					case 79:
						{    return new Symbol(Sym.tABS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -80:
						break;
					case 80:
						{    return new Symbol(Sym.tOUT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -81:
						break;
					case 81:
						{    return new Symbol(Sym.tOFF, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -82:
						break;
					case 82:
						{    return new Symbol(Sym.tPEN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -83:
						break;
					case 83:
						{    return new Symbol(Sym.tPUT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -84:
						break;
					case 84:
						{    return new Symbol(Sym.tPOS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -85:
						break;
					case 85:
						{    return new Symbol(Sym.tVAL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -86:
						break;
					case 86:
						{    return new Symbol(Sym.tGET, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -87:
						break;
					case 87:
						{    return new Symbol(Sym.tFIX, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -88:
						break;
					case 88:
						{    return new Symbol(Sym.tFOR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -89:
						break;
					case 89:
						{    return new Symbol(Sym.tXOR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -90:
						break;
					case 90:
						{    return new Symbol(Sym.tKEY, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -91:
						break;
					case 91:
						{    return new Symbol(Sym.tREAD, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -92:
						break;
					case 92:
						{    return new Symbol(Sym.tRSET, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -93:
						break;
					case 93:
						{    return new Symbol(Sym.tELSE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -94:
						break;
					case 94:
						{    return new Symbol(Sym.tEXIT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -95:
						break;
					case 95:
						{    return new Symbol(Sym.tMID_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -96:
						break;
					case 96:
						{    return new Symbol(Sym.tNEXT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -97:
						break;
					case 97:
						{    return new Symbol(Sym.tNAME, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -98:
						break;
					case 98:
						{    return new Symbol(Sym.tCINT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -99:
						break;
					case 99:
						{    return new Symbol(Sym.tCLNG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -100:
						break;
					case 100:
						{    return new Symbol(Sym.tCDBL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -101:
						break;
					case 101:
						{    return new Symbol(Sym.tCSNG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -102:
						break;
					case 102:
						{    return new Symbol(Sym.tCALL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -103:
						break;
					case 103:
						{    return new Symbol(Sym.tCASE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -104:
						break;
					case 104:
						{    return new Symbol(Sym.tCHR_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -105:
						break;
					case 105:
						{    return new Symbol(Sym.tLINE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -106:
						break;
					case 106:
						{    return new Symbol(Sym.tLIST, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -107:
						break;
					case 107:
						{    return new Symbol(Sym.tLSET, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -108:
						break;
					case 108:
						{    return new Symbol(Sym.tLONG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -109:
						break;
					case 109:
						{    return new Symbol(Sym.tLOCK, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -110:
						break;
					case 110:
						{    return new Symbol(Sym.tLOOP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -111:
						break;
					case 111:
						{    return new Symbol(Sym.tLPOS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -112:
						break;
					case 112:
						{    return new Symbol(Sym.tDRAW, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -113:
						break;
					case 113:
						{    return new Symbol(Sym.tDATA, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -114:
						break;
					case 114:
						{    return new Symbol(Sym.tSEEK, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -115:
						break;
					case 115:
						{    return new Symbol(Sym.tSSEG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -116:
						break;
					case 116:
						{    return new Symbol(Sym.tSTEP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -117:
						break;
					case 117:
						{    return new Symbol(Sym.tSTOP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -118:
						break;
					case 118:
						{    return new Symbol(Sym.tSADD, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -119:
						break;
					case 119:
						{    return new Symbol(Sym.tSWAP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -120:
						break;
					case 120:
						{    return new Symbol(Sym.tTRON, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -121:
						break;
					case 121:
						{    return new Symbol(Sym.tTYPE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -122:
						break;
					case 122:
						{    return new Symbol(Sym.tTHEN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -123:
						break;
					case 123:
						{    return new Symbol(Sym.tBEEP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -124:
						break;
					case 124:
						{    return new Symbol(Sym.tBASE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -125:
						break;
					case 125:
						{    return new Symbol(Sym.tOCT_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -126:
						break;
					case 126:
						{    return new Symbol(Sym.tOPEN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -127:
						break;
					case 127:
						{    return new Symbol(Sym.tPEEK, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -128:
						break;
					case 128:
						{    return new Symbol(Sym.tPMAP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -129:
						break;
					case 129:
						{    return new Symbol(Sym.tPLAY, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -130:
						break;
					case 130:
						{    return new Symbol(Sym.tPSET, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -131:
						break;
					case 131:
						{    return new Symbol(Sym.tPOKE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -132:
						break;
					case 132:
						{    return new Symbol(Sym.tVIEW, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -133:
						break;
					case 133:
						{    return new Symbol(Sym.tHEX_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -134:
						break;
					case 134:
						{    return new Symbol(Sym.tGOTO, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -135:
						break;
					case 135:
						{    return new Symbol(Sym.tWEND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -136:
						break;
					case 136:
						{    return new Symbol(Sym.tWAIT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -137:
						break;
					case 137:
						{    return new Symbol(Sym.tKILL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -138:
						break;
					case 138:
						{    return new Symbol(Sym.tREDIM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -139:
						break;
					case 139:
						{    return new Symbol(Sym.tRESET, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -140:
						break;
					case 140:
						{    return new Symbol(Sym.tRMDIR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -141:
						break;
					case 141:
						{    return new Symbol(Sym.tERROR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -142:
						break;
					case 142:
						{    return new Symbol(Sym.tERDEV, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -143:
						break;
					case 143:
						{    return new Symbol(Sym.tERASE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -144:
						break;
					case 144:
						{    return new Symbol(Sym.tINSTR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -145:
						break;
					case 145:
						{    return new Symbol(Sym.tINPUT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -146:
						break;
					case 146:
						{    return new Symbol(Sym.tIOCTL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -147:
						break;
					case 147:
						{    return new Symbol(Sym.tCLEAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -148:
						break;
					case 148:
						{    return new Symbol(Sym.tCDECL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -149:
						break;
					case 149:
						{    return new Symbol(Sym.tCALLS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -150:
						break;
					case 150:
						{    return new Symbol(Sym.tCONST, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -151:
						break;
					case 151:
						{    return new Symbol(Sym.tCOLOR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -152:
						break;
					case 152:
						{    return new Symbol(Sym.tCHDIR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -153:
						break;
					case 153:
						{    return new Symbol(Sym.tCHAIN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -154:
						break;
					case 154:
						{    return new Symbol(Sym.tLEFT_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -155:
						break;
					case 155:
						{    return new Symbol(Sym.tLOCAL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -156:
						break;
					case 156:
						{    return new Symbol(Sym.tUNTIL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -157:
						break;
					case 157:
						{    return new Symbol(Sym.tUSING, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -158:
						break;
					case 158:
						{    return new Symbol(Sym.tDATE_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -159:
						break;
					case 159:
						{    return new Symbol(Sym.tSLEEP, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -160:
						break;
					case 160:
						{    return new Symbol(Sym.tSTRIG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -161:
						break;
					case 161:
						{    return new Symbol(Sym.tSTICK, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -162:
						break;
					case 162:
						{    return new Symbol(Sym.tSOUND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -163:
						break;
					case 163:
						{    return new Symbol(Sym.tSHELL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -164:
						break;
					case 164:
						{    return new Symbol(Sym.tTROFF, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -165:
						break;
					case 165:
						{    return new Symbol(Sym.tTIMER, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -166:
						break;
					case 166:
						{    return new Symbol(Sym.tTIME_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -167:
						break;
					case 167:
						{    return new Symbol(Sym.tALIAS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -168:
						break;
					case 168:
						{    return new Symbol(Sym.tBLOAD, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -169:
						break;
					case 169:
						{    return new Symbol(Sym.tBSAVE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -170:
						break;
					case 170:
						{    return new Symbol(Sym.tBYVAL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -171:
						break;
					case 171:
						{    return new Symbol(Sym.tPRINT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -172:
						break;
					case 172:
						{    return new Symbol(Sym.tPCOPY, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -173:
						break;
					case 173:
						{    return new Symbol(Sym.tPAINT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -174:
						break;
					case 174:
						{    return new Symbol(Sym.tPOINT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -175:
						break;
					case 175:
						{    return new Symbol(Sym.tGOSUB, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -176:
						break;
					case 176:
						{    return new Symbol(Sym.tWRITE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -177:
						break;
					case 177:
						{    return new Symbol(Sym.tWIDTH, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -178:
						break;
					case 178:
						{    return new Symbol(Sym.tWHILE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -179:
						break;
					case 179:
						{    return new Symbol(Sym.tRESUME, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -180:
						break;
					case 180:
						{    return new Symbol(Sym.tRETURN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -181:
						break;
					case 181:
						{    return new Symbol(Sym.tRIGHT_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -182:
						break;
					case 182:
						{    return new Symbol(Sym.tRTRIM_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -183:
						break;
					case 183:
						{    return new Symbol(Sym.tRANDOM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -184:
						break;
					case 184:
						{    return new Symbol(Sym.tERDEV_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -185:
						break;
					case 185:
						{    return new Symbol(Sym.tINPUT_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -186:
						break;
					case 186:
						{    return new Symbol(Sym.tINKEY_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -187:
						break;
					case 187:
						{    return new Symbol(Sym.tIOCTL_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -188:
						break;
					case 188:
						{    return new Symbol(Sym.tCIRCLE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -189:
						break;
					case 189:
						{    return new Symbol(Sym.tCSRLIN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -190:
						break;
					case 190:
						{    return new Symbol(Sym.tCOMMON, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -191:
						break;
					case 191:
						{    return new Symbol(Sym.tCVDMBF, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -192:
						break;
					case 192:
						{    return new Symbol(Sym.tLCASE_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -193:
						break;
					case 193:
						{    return new Symbol(Sym.tLTRIM_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -194:
						break;
					case 194:
						{    return new Symbol(Sym.tLBOUND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -195:
						break;
					case 195:
						{    return new Symbol(Sym.tLOCATE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -196:
						break;
					case 196:
						{    return new Symbol(Sym.tLPRINT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -197:
						break;
					case 197:
						{    return new Symbol(Sym.tUEVENT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -198:
						break;
					case 198:
						{    return new Symbol(Sym.tUNLOCK, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -199:
						break;
					case 199:
						{    return new Symbol(Sym.tUCASE_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -200:
						break;
					case 200:
						{    return new Symbol(Sym.tUBOUND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -201:
						break;
					case 201:
						{    return new Symbol(Sym.tDEFINT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -202:
						break;
					case 202:
						{    return new Symbol(Sym.tDEFLNG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -203:
						break;
					case 203:
						{    return new Symbol(Sym.tDEFDBL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -204:
						break;
					case 204:
						{    return new Symbol(Sym.tDEFSNG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -205:
						break;
					case 205:
						{    return new Symbol(Sym.tDEFSTR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -206:
						break;
					case 206:
						{    return new Symbol(Sym.tDOUBLE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -207:
						break;
					case 207:
						{    return new Symbol(Sym.tSELECT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -208:
						break;
					case 208:
						{    return new Symbol(Sym.tSETMEM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -209:
						break;
					case 209:
						{    return new Symbol(Sym.tSINGLE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -210:
						break;
					case 210:
						{    return new Symbol(Sym.tSIGNAL, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -211:
						break;
					case 211:
						{    return new Symbol(Sym.tSCREEN, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -212:
						break;
					case 212:
						{    return new Symbol(Sym.tSTRING, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -213:
						break;
					case 213:
						{    return new Symbol(Sym.tSTATIC, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -214:
						break;
					case 214:
						{    return new Symbol(Sym.tSYSTEM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -215:
						break;
					case 215:
						{    return new Symbol(Sym.tSPACE_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -216:
						break;
					case 216:
						{    return new Symbol(Sym.tSHARED, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -217:
						break;
					case 217:
						{    return new Symbol(Sym.tACCESS, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -218:
						break;
					case 218:
						{    return new Symbol(Sym.tAPPEND, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -219:
						break;
					case 219:
						{    return new Symbol(Sym.tBINARY, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -220:
						break;
					case 220:
						{    return new Symbol(Sym.tOUTPUT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -221:
						break;
					case 221:
						{    return new Symbol(Sym.tOPTION, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -222:
						break;
					case 222:
						{    return new Symbol(Sym.tPRESET, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -223:
						break;
					case 223:
						{    return new Symbol(Sym.tVARSEG, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -224:
						break;
					case 224:
						{    return new Symbol(Sym.tVARPTR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -225:
						break;
					case 225:
						{    return new Symbol(Sym.tWINDOW, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -226:
						break;
					case 226:
						{    return new Symbol(Sym.tRESTORE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -227:
						break;
					case 227:
						{    return new Symbol(Sym.tENVIRON, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -228:
						break;
					case 228:
						{    return new Symbol(Sym.tINTEGER, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -229:
						break;
					case 229:
						{    return new Symbol(Sym.tDECLARE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -230:
						break;
					case 230:
						{    return new Symbol(Sym.tSTRING_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -231:
						break;
					case 231:
						{    return new Symbol(Sym.tPALETTE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -232:
						break;
					case 232:
						{    return new Symbol(Sym.tVARPTR_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -233:
						break;
					case 233:
						{    return new Symbol(Sym.tENVIRON_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -234:
						break;
					case 234:
						{    return new Symbol(Sym.tCOMMAND_, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -235:
						break;
					case 235:
						{    return new Symbol(Sym.tABSOLUTE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -236:
						break;
					case 236:
						{    return new Symbol(Sym.tFUNCTION, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -237:
						break;
					case 237:
						{    return new Symbol(Sym.tRANDOMIZE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -238:
						break;
					case 238:
						{    return new Symbol(Sym.tINTERRUPT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -239:
						break;
					case 239:
						{   return new Symbol(Sym.tENDSELECT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -240:
						break;
					case 240:
						{   yybegin(YYINITIAL);   }
					case -241:
						break;
					case 241:
						{   return new Symbol(Sym.tSTRINGTEXT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -242:
						break;
					case 242:
						{
                              System.err.println("Error: unterminated string on line "+(yyline+1)); 
                              return new Symbol(Sym.error, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -243:
						break;
					case 243:
						{   yybegin(YYINITIAL); }
					case -244:
						break;
					case 244:
						{   System.out.println("in comment mode at line "+(yyline+1)); yybegin(sYYCOMMENT); }
					case -245:
						break;
					case 245:
						{   yybegin(sYYMETACMD2); }
					case -246:
						break;
					case 246:
						{  /* do nothing */  }
					case -247:
						break;
					case 247:
						{  yybegin(YYINITIAL); return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -248:
						break;
					case 248:
						{  System.err.println("Warning: no executable statements should be placed on the same line as a $Metacommand."); }
					case -249:
						break;
					case 249:
						{  return new Symbol(Sym.tMETASTATIC, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -250:
						break;
					case 250:
						{  return new Symbol(Sym.tMETADYNAMIC, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -251:
						break;
					case 251:
						{  yybegin(sYYINCLUDE); return new Symbol(Sym.tMETAINCLUDE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -252:
						break;
					case 252:
						{  /* do nothing */    }
					case -253:
						break;
					case 253:
						{  yybegin(YYINITIAL);  return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -254:
						break;
					case 254:
						{  yybegin(sYYFILESTR); }
					case -255:
						break;
					case 255:
						{  return new Symbol(Sym.tINCLUDEFILE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -256:
						break;
					case 256:
						{  System.err.println("$Metacommand Error: unterminated include filename on line "+(yyline+1)); /*continues*/
                                 return new Symbol(Sym.error, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -257:
						break;
					case 257:
						{  yybegin(sYYMETACMD2); }
					case -258:
						break;
					case 259:
						{  return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -259:
						break;
					case 260:
						{   yybegin(sYYREMSTART); /* note: this will allow REM$STATIC */ }
					case -260:
						break;
					case 261:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -261:
						break;
					case 262:
						{   return new Symbol(Sym.tNUM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -262:
						break;
					case 263:
						{   yybegin(YYINITIAL);   }
					case -263:
						break;
					case 264:
						{   return new Symbol(Sym.tSTRINGTEXT, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -264:
						break;
					case 265:
						{
                              System.err.println("Error: unterminated string on line "+(yyline+1)); 
                              return new Symbol(Sym.error, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -265:
						break;
					case 266:
						{  yybegin(YYINITIAL); return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -266:
						break;
					case 267:
						{  yybegin(YYINITIAL);  return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -267:
						break;
					case 268:
						{  return new Symbol(Sym.tINCLUDEFILE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -268:
						break;
					case 269:
						{  System.err.println("$Metacommand Error: unterminated include filename on line "+(yyline+1)); /*continues*/
                                 return new Symbol(Sym.error, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -269:
						break;
					case 271:
						{  return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -270:
						break;
					case 272:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -271:
						break;
					case 273:
						{   return new Symbol(Sym.tNUM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -272:
						break;
					case 274:
						{  yybegin(YYINITIAL); return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -273:
						break;
					case 275:
						{  yybegin(YYINITIAL);  return new Symbol(Sym.tNEWLINE, new TokenValue(yytext(), yyline, yychar, sourceFilename)); }
					case -274:
						break;
					case 277:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -275:
						break;
					case 278:
						{   return new Symbol(Sym.tNUM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -276:
						break;
					case 280:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -277:
						break;
					case 281:
						{   return new Symbol(Sym.tNUM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -278:
						break;
					case 283:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -279:
						break;
					case 284:
						{   return new Symbol(Sym.tNUM, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -280:
						break;
					case 286:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -281:
						break;
					case 288:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -282:
						break;
					case 290:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -283:
						break;
					case 292:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -284:
						break;
					case 294:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -285:
						break;
					case 296:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -286:
						break;
					case 298:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -287:
						break;
					case 300:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -288:
						break;
					case 302:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -289:
						break;
					case 304:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -290:
						break;
					case 306:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -291:
						break;
					case 308:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -292:
						break;
					case 310:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -293:
						break;
					case 312:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -294:
						break;
					case 314:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -295:
						break;
					case 316:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -296:
						break;
					case 318:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -297:
						break;
					case 320:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -298:
						break;
					case 322:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -299:
						break;
					case 324:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -300:
						break;
					case 326:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -301:
						break;
					case 328:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -302:
						break;
					case 330:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -303:
						break;
					case 332:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -304:
						break;
					case 334:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -305:
						break;
					case 336:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -306:
						break;
					case 338:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -307:
						break;
					case 340:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -308:
						break;
					case 341:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -309:
						break;
					case 342:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -310:
						break;
					case 343:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -311:
						break;
					case 344:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -312:
						break;
					case 345:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -313:
						break;
					case 346:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -314:
						break;
					case 347:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -315:
						break;
					case 348:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -316:
						break;
					case 349:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -317:
						break;
					case 350:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -318:
						break;
					case 351:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -319:
						break;
					case 352:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -320:
						break;
					case 353:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -321:
						break;
					case 354:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -322:
						break;
					case 355:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -323:
						break;
					case 356:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -324:
						break;
					case 357:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -325:
						break;
					case 358:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -326:
						break;
					case 359:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -327:
						break;
					case 360:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -328:
						break;
					case 361:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -329:
						break;
					case 362:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -330:
						break;
					case 363:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -331:
						break;
					case 364:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -332:
						break;
					case 365:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -333:
						break;
					case 366:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -334:
						break;
					case 367:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -335:
						break;
					case 368:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -336:
						break;
					case 369:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -337:
						break;
					case 370:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -338:
						break;
					case 371:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -339:
						break;
					case 372:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -340:
						break;
					case 373:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -341:
						break;
					case 374:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -342:
						break;
					case 375:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -343:
						break;
					case 376:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -344:
						break;
					case 377:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -345:
						break;
					case 378:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -346:
						break;
					case 379:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -347:
						break;
					case 380:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -348:
						break;
					case 381:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -349:
						break;
					case 382:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -350:
						break;
					case 383:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -351:
						break;
					case 384:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -352:
						break;
					case 385:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -353:
						break;
					case 386:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -354:
						break;
					case 387:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -355:
						break;
					case 388:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -356:
						break;
					case 389:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -357:
						break;
					case 390:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -358:
						break;
					case 391:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -359:
						break;
					case 392:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -360:
						break;
					case 393:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -361:
						break;
					case 394:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -362:
						break;
					case 395:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -363:
						break;
					case 396:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -364:
						break;
					case 397:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -365:
						break;
					case 398:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -366:
						break;
					case 399:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -367:
						break;
					case 400:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -368:
						break;
					case 401:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -369:
						break;
					case 402:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -370:
						break;
					case 403:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -371:
						break;
					case 404:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -372:
						break;
					case 405:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -373:
						break;
					case 406:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -374:
						break;
					case 407:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -375:
						break;
					case 408:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -376:
						break;
					case 409:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -377:
						break;
					case 410:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -378:
						break;
					case 411:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -379:
						break;
					case 412:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -380:
						break;
					case 413:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -381:
						break;
					case 414:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -382:
						break;
					case 415:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -383:
						break;
					case 416:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -384:
						break;
					case 417:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -385:
						break;
					case 418:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -386:
						break;
					case 419:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -387:
						break;
					case 420:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -388:
						break;
					case 421:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -389:
						break;
					case 422:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -390:
						break;
					case 423:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -391:
						break;
					case 424:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -392:
						break;
					case 425:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -393:
						break;
					case 426:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -394:
						break;
					case 427:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -395:
						break;
					case 428:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -396:
						break;
					case 429:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -397:
						break;
					case 430:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -398:
						break;
					case 431:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -399:
						break;
					case 432:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -400:
						break;
					case 433:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -401:
						break;
					case 434:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -402:
						break;
					case 435:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -403:
						break;
					case 436:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -404:
						break;
					case 437:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -405:
						break;
					case 438:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -406:
						break;
					case 439:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -407:
						break;
					case 440:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -408:
						break;
					case 441:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -409:
						break;
					case 442:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -410:
						break;
					case 443:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -411:
						break;
					case 444:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -412:
						break;
					case 445:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -413:
						break;
					case 446:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -414:
						break;
					case 447:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -415:
						break;
					case 448:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -416:
						break;
					case 449:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -417:
						break;
					case 450:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -418:
						break;
					case 451:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -419:
						break;
					case 452:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -420:
						break;
					case 453:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -421:
						break;
					case 454:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -422:
						break;
					case 455:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -423:
						break;
					case 456:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -424:
						break;
					case 457:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -425:
						break;
					case 458:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -426:
						break;
					case 459:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -427:
						break;
					case 460:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -428:
						break;
					case 461:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -429:
						break;
					case 462:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -430:
						break;
					case 463:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -431:
						break;
					case 464:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -432:
						break;
					case 465:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -433:
						break;
					case 466:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -434:
						break;
					case 467:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -435:
						break;
					case 468:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -436:
						break;
					case 469:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -437:
						break;
					case 470:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -438:
						break;
					case 471:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -439:
						break;
					case 472:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -440:
						break;
					case 473:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -441:
						break;
					case 474:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -442:
						break;
					case 475:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -443:
						break;
					case 476:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -444:
						break;
					case 477:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -445:
						break;
					case 478:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -446:
						break;
					case 479:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -447:
						break;
					case 480:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -448:
						break;
					case 481:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -449:
						break;
					case 482:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -450:
						break;
					case 483:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -451:
						break;
					case 484:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -452:
						break;
					case 485:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -453:
						break;
					case 486:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -454:
						break;
					case 487:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -455:
						break;
					case 488:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -456:
						break;
					case 489:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -457:
						break;
					case 490:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -458:
						break;
					case 491:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -459:
						break;
					case 492:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -460:
						break;
					case 493:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -461:
						break;
					case 494:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -462:
						break;
					case 495:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -463:
						break;
					case 496:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -464:
						break;
					case 497:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -465:
						break;
					case 498:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -466:
						break;
					case 499:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -467:
						break;
					case 500:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -468:
						break;
					case 501:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -469:
						break;
					case 502:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -470:
						break;
					case 503:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -471:
						break;
					case 504:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -472:
						break;
					case 505:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -473:
						break;
					case 506:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -474:
						break;
					case 507:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -475:
						break;
					case 508:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -476:
						break;
					case 509:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -477:
						break;
					case 510:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -478:
						break;
					case 511:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -479:
						break;
					case 512:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -480:
						break;
					case 513:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -481:
						break;
					case 514:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -482:
						break;
					case 515:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -483:
						break;
					case 516:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -484:
						break;
					case 517:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -485:
						break;
					case 518:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -486:
						break;
					case 519:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -487:
						break;
					case 520:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -488:
						break;
					case 521:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -489:
						break;
					case 522:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -490:
						break;
					case 523:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -491:
						break;
					case 524:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -492:
						break;
					case 525:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -493:
						break;
					case 526:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -494:
						break;
					case 527:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -495:
						break;
					case 528:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -496:
						break;
					case 529:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -497:
						break;
					case 530:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -498:
						break;
					case 531:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -499:
						break;
					case 532:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -500:
						break;
					case 533:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -501:
						break;
					case 534:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -502:
						break;
					case 535:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -503:
						break;
					case 536:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -504:
						break;
					case 537:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -505:
						break;
					case 538:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -506:
						break;
					case 539:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -507:
						break;
					case 540:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -508:
						break;
					case 541:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -509:
						break;
					case 542:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -510:
						break;
					case 543:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -511:
						break;
					case 544:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -512:
						break;
					case 545:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -513:
						break;
					case 546:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -514:
						break;
					case 547:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -515:
						break;
					case 548:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -516:
						break;
					case 549:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -517:
						break;
					case 550:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -518:
						break;
					case 551:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -519:
						break;
					case 552:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -520:
						break;
					case 553:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -521:
						break;
					case 554:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -522:
						break;
					case 555:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -523:
						break;
					case 556:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -524:
						break;
					case 557:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -525:
						break;
					case 558:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -526:
						break;
					case 559:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -527:
						break;
					case 560:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -528:
						break;
					case 561:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -529:
						break;
					case 562:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -530:
						break;
					case 563:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -531:
						break;
					case 564:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -532:
						break;
					case 565:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -533:
						break;
					case 566:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -534:
						break;
					case 567:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -535:
						break;
					case 568:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -536:
						break;
					case 570:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -537:
						break;
					case 572:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -538:
						break;
					case 573:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -539:
						break;
					case 574:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -540:
						break;
					case 575:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -541:
						break;
					case 576:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -542:
						break;
					case 577:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -543:
						break;
					case 578:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -544:
						break;
					case 579:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -545:
						break;
					case 580:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -546:
						break;
					case 581:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -547:
						break;
					case 582:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -548:
						break;
					case 583:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -549:
						break;
					case 584:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -550:
						break;
					case 585:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -551:
						break;
					case 586:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -552:
						break;
					case 587:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -553:
						break;
					case 588:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -554:
						break;
					case 589:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -555:
						break;
					case 590:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -556:
						break;
					case 591:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -557:
						break;
					case 592:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -558:
						break;
					case 593:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -559:
						break;
					case 594:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -560:
						break;
					case 595:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -561:
						break;
					case 596:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -562:
						break;
					case 597:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -563:
						break;
					case 598:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -564:
						break;
					case 599:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -565:
						break;
					case 600:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -566:
						break;
					case 601:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -567:
						break;
					case 602:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -568:
						break;
					case 603:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -569:
						break;
					case 604:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -570:
						break;
					case 605:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -571:
						break;
					case 606:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -572:
						break;
					case 607:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -573:
						break;
					case 608:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -574:
						break;
					case 609:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -575:
						break;
					case 610:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -576:
						break;
					case 611:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -577:
						break;
					case 612:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -578:
						break;
					case 613:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -579:
						break;
					case 614:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -580:
						break;
					case 615:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -581:
						break;
					case 616:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -582:
						break;
					case 617:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -583:
						break;
					case 618:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -584:
						break;
					case 619:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -585:
						break;
					case 620:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -586:
						break;
					case 621:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -587:
						break;
					case 622:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -588:
						break;
					case 623:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -589:
						break;
					case 624:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -590:
						break;
					case 625:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -591:
						break;
					case 626:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -592:
						break;
					case 627:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -593:
						break;
					case 628:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -594:
						break;
					case 629:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -595:
						break;
					case 630:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -596:
						break;
					case 631:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -597:
						break;
					case 632:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -598:
						break;
					case 633:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -599:
						break;
					case 634:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -600:
						break;
					case 635:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -601:
						break;
					case 636:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -602:
						break;
					case 637:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -603:
						break;
					case 638:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -604:
						break;
					case 639:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -605:
						break;
					case 640:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -606:
						break;
					case 641:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -607:
						break;
					case 642:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -608:
						break;
					case 643:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -609:
						break;
					case 644:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -610:
						break;
					case 645:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -611:
						break;
					case 646:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -612:
						break;
					case 647:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -613:
						break;
					case 648:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -614:
						break;
					case 649:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -615:
						break;
					case 650:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -616:
						break;
					case 651:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -617:
						break;
					case 652:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -618:
						break;
					case 653:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -619:
						break;
					case 654:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -620:
						break;
					case 655:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -621:
						break;
					case 656:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -622:
						break;
					case 657:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -623:
						break;
					case 658:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -624:
						break;
					case 659:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -625:
						break;
					case 660:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -626:
						break;
					case 661:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -627:
						break;
					case 662:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -628:
						break;
					case 663:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -629:
						break;
					case 664:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -630:
						break;
					case 665:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -631:
						break;
					case 666:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -632:
						break;
					case 667:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -633:
						break;
					case 668:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -634:
						break;
					case 669:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -635:
						break;
					case 670:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -636:
						break;
					case 671:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -637:
						break;
					case 672:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -638:
						break;
					case 673:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -639:
						break;
					case 674:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -640:
						break;
					case 675:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -641:
						break;
					case 676:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -642:
						break;
					case 677:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -643:
						break;
					case 678:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -644:
						break;
					case 679:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -645:
						break;
					case 680:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -646:
						break;
					case 681:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -647:
						break;
					case 682:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -648:
						break;
					case 683:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -649:
						break;
					case 684:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -650:
						break;
					case 685:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -651:
						break;
					case 686:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -652:
						break;
					case 687:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -653:
						break;
					case 688:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -654:
						break;
					case 689:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -655:
						break;
					case 690:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -656:
						break;
					case 691:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -657:
						break;
					case 692:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -658:
						break;
					case 693:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -659:
						break;
					case 694:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -660:
						break;
					case 695:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -661:
						break;
					case 696:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -662:
						break;
					case 697:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -663:
						break;
					case 698:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -664:
						break;
					case 699:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -665:
						break;
					case 700:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -666:
						break;
					case 701:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -667:
						break;
					case 702:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -668:
						break;
					case 703:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -669:
						break;
					case 704:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -670:
						break;
					case 705:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -671:
						break;
					case 706:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -672:
						break;
					case 707:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -673:
						break;
					case 708:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -674:
						break;
					case 709:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -675:
						break;
					case 710:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -676:
						break;
					case 711:
						{   return new Symbol(Sym.tVAR, new TokenValue(yytext(),yyline,yychar,sourceFilename)); }
					case -677:
						break;
					default:
						yy_error(YY_E_INTERNAL,false);
					case -1:
					}
					yy_initial = true;
					yy_state = yy_state_dtrans[yy_lexical_state];
					yy_next_state = YY_NO_STATE;
					yy_last_accept_state = YY_NO_STATE;
					yy_mark_start();
					yy_this_accept = yy_acpt[yy_state];
					if (YY_NOT_ACCEPT != yy_this_accept) {
						yy_last_accept_state = yy_state;
						yy_mark_end();
					}
				}
			}
		}
	}
}
