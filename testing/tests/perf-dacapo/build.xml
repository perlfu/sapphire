<!--
 ~  This file is part of the Jikes RVM project (http://jikesrvm.org).
 ~
 ~  This file is licensed to You under the Eclipse Public License (EPL);
 ~  You may not use this file except in compliance with the License. You
 ~  may obtain a copy of the License at
 ~
 ~      http://www.opensource.org/licenses/eclipse-1.0.php
 ~
 ~  See the COPYRIGHT.txt file distributed with this work for information
 ~  regarding copyright ownership.
 -->
<project name="perf-dacapo" default="test" basedir=".">

  <property file="dacapo.properties" prefix="dacapo"/>

  <import file="../../../build/tests.xml"/>

  <property name="dacapo.jar" value="${external.lib.dir}/dacapo/dacapo-2006-10-MR2.jar"/>
  <property name="test.class.path" value="${dacapo.jar}"/>

  <macrodef name="dacapo">
    <attribute name="tag"/>
    <attribute name="benchmark"/>
    <attribute name="useSmallHeap"/>
    <attribute name="iterations"/>
    <attribute name="requires-display" default="false"/>
    <sequential>


      <fail unless="dacapo.@{benchmark}.largeHeap" message="@{benchmark}.largeHeap not specified"/> 
      <fail unless="dacapo.@{benchmark}.smallHeap" message="@{benchmark}.smallHeap not specified"/> 

      <condition property="dacapo.@{tag}.heapSize"
                 value="${dacapo.@{benchmark}.smallHeap}"
                 else="${dacapo.@{benchmark}.largeHeap}">
        <equals arg1="@{useSmallHeap}" arg2="true"/>
      </condition>

      <condition property="dacapo.@{tag}.timeLimit"
                 value="${dacapo.@{benchmark}.i@{iterations}.smallHeap-@{useSmallHeap}.timeLimit}"
                 else="${test.time.limit}">
        <isset property="dacapo.@{benchmark}.i@{iterations}.smallHeap-@{useSmallHeap}.timeLimit"/>
      </condition>

      <prepareRvm tag="@{tag}" class="Harness" requires-display="@{requires-display}"
         rvmArgs="${test.perf.extra.args}"
         args="-c MMTkCallback -n @{iterations} @{benchmark}"
         timeLimit="${dacapo.@{tag}.timeLimit}"
         initialHeapSize="${dacapo.@{tag}.heapSize}"
         maxHeapSize="${dacapo.@{tag}.heapSize}"/>

      <outputMultiExecutionTestStart tag="@{tag}"/>

      <forEach list="${test.perf.executions}" property="execution">
        <sequential>
          <invokeRvm tag="@{tag}" execution="@{execution}"/>
          <outputExecutionStart tag="@{tag}" execution="@{execution}"/>
          <outputStatisticStart/>
          <extractMMTkStatistics tag="@{tag}" execution="@{execution}" statistics="time.mu time.gc GC majorGC"/>
          <extractStatistic tag="@{tag}" execution="@{execution}" key="time" pattern="===== DaCapo @{benchmark} PASSED in (.*) msec ====="/>
          <outputStatisticEnd/>
          <outputExecutionResults tag="@{tag}" execution="@{execution}"/>
          <outputExecutionEnd/>
          <displayExecutionResults tag="@{tag}" execution="@{execution}"/>
        </sequential>
      </forEach>

      <outputMultiExecutionTestEnd/>
    </sequential>
  </macrodef>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                            Run the tests                                 * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="test" depends="init">
    <test-property name="external.lib.dir" location="${jikesrvm.dir}/.ant.properties"/>
    <test-file name="dacapo.jar" location="${jikesrvm.dir}/.ant.properties"/>

    <startResults/>

    <fail unless="test.perf.runs" message="test.perf.runs missing"/>

    <forEach list="${test.perf.runs}" property="run">
      <sequential>

        <fail unless="test.perf.run-@{run}.useSmallHeap" message="test.perf.run-@{run}.useSmallHeap missing"/>
        <fail unless="test.perf.run-@{run}.iterations" message="test.perf.run-@{run}.iterations missing"/>

        <runs suffix="@{run}" useSmallHeap="${test.perf.run-@{run}.useSmallHeap}" iterations="${test.perf.run-@{run}.iterations}"/>
      </sequential>
    </forEach>

    <finishResults/>
  </target>

  <macrodef name="runs">
    <attribute name="useSmallHeap"/>
    <attribute name="iterations"/>
    <attribute name="suffix"/>
    <sequential>
      <dacapo tag="antlr-@{suffix}"    benchmark="antlr"    useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="bloat-@{suffix}"    benchmark="bloat"    useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="chart-@{suffix}"    benchmark="chart"    useSmallHeap="@{useSmallHeap}" iterations="@{iterations}" requires-display="true"/>
      <dacapo tag="eclipse-@{suffix}"  benchmark="eclipse"  useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="fop-@{suffix}"      benchmark="fop"      useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="hsqldb-@{suffix}"   benchmark="hsqldb"   useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="jython-@{suffix}"   benchmark="jython"   useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="luindex-@{suffix}"  benchmark="luindex"  useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="lusearch-@{suffix}" benchmark="lusearch" useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="pmd-@{suffix}"      benchmark="pmd"      useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
      <dacapo tag="xalan-@{suffix}"    benchmark="xalan"    useSmallHeap="@{useSmallHeap}" iterations="@{iterations}"/>
    </sequential>
  </macrodef>
  

</project>
