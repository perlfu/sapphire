<!--
 ~  This file is part of the Jikes RVM project (http://jikesrvm.org).
 ~
 ~  This file is licensed to You under the Eclipse Public License (EPL);
 ~  You may not use this file except in compliance with the License. You
 ~  may obtain a copy of the License at
 ~
 ~      http://www.opensource.org/licenses/eclipse-1.0.php
 ~
 ~  See the COPYRIGHT.txt file distributed with this work for information
 ~  regarding copyright ownership.
 -->
<project name="perf-jbb2000" default="test" basedir=".">

  <property file="jbb2000.properties" prefix="jbb2000"/>

  <import file="../../../build/tests.xml"/>

  <property name="specjbb2000.dir" location="${external.lib.dir}/SPECjbb2000"/>
  <property name="test.class.path" value="${specjbb2000.dir}/jbb.jar:${specjbb2000.dir}/jbb_no_precompile.jar:${specjbb2000.dir}/check.jar:${specjbb2000.dir}/reporter.jar"/>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                            Prepare dirs for tests                        * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="prepare-dirs" depends="init">
    <test-property name="external.lib.dir" location="${jikesrvm.dir}/.ant.properties"/>
    <test-file name="specjbb2000.dir" location="${jikesrvm.dir}/.ant.properties"/>

    <copy todir="${build.tests.dir}">
      <fileset dir=".">
        <include name="*.props"/>
      </fileset>
    </copy>
  </target>

  <!-- **************************************************************************** -->
  <!-- *                                                                          * -->
  <!-- *                            Run the tests                                 * -->
  <!-- *                                                                          * -->
  <!-- **************************************************************************** -->

  <target name="test" depends="prepare-dirs">

    <startResults/>

    <jbb2000 tag="jbb2000" useSmallHeap="false"/>
    <jbb2000 tag="jbb2000GC" useSmallHeap="true"/>

    <finishResults/>
  </target>

  <macrodef name="jbb2000">
    <attribute name="tag"/>
    <attribute name="useSmallHeap"/>
    <sequential>

      <fail unless="jbb2000.largeHeap" message="jbb2000.largeHeap not specified"/>
      <fail unless="jbb2000.smallHeap" message="jbb2000.smallHeap not specified"/>

      <condition property="jbb2000.@{tag}.heapSize"
                 value="${jbb2000.smallHeap}"
                 else="${jbb2000.largeHeap}">
        <equals arg1="@{useSmallHeap}" arg2="true"/>
      </condition>

      <condition property="jbb2000.@{tag}.timeLimit"
                 value="${jbb2000.smallHeap-@{useSmallHeap}.timeLimit}"
                 else="${test.time.limit}">
        <isset property="jbb2000.smallHeap-@{useSmallHeap}.timeLimit"/>
      </condition>

      <prepareRvm tag="@{tag}" class="spec.jbb.JBBmain" requires-display="true"
         rvmArgs="-X:gc:harnessAll=true ${test.perf.extra.args}"
         args="-propfile SPECjbb.perf.props"
         timeLimit="${jbb2000.@{tag}.timeLimit}"
         initialHeapSize="${jbb2000.@{tag}.heapSize}"
         maxHeapSize="${jbb2000.@{tag}.heapSize}"/>

      <outputMultiExecutionTestStart tag="@{tag}"/>

      <forEach list="${test.perf.jbb-executions}" property="execution">
        <sequential>
          <invokeRvm tag="@{tag}" execution="@{execution}"/>
          <outputExecutionStart tag="@{tag}" execution="@{execution}"/>
          <outputStatisticStart/>
          <extractMMTkStatistics tag="@{tag}" execution="@{execution}" statistics="time.mu time.gc GC majorGC"/>
          <findStatistic tag="@{tag}" execution="@{execution}" pattern="Run will be COMPLIANT" key="compliant.check"/>
          <findStatistic tag="@{tag}" execution="@{execution}" pattern="No errors.  Valid run." key="errors.check"/>
          <extractStatistic tag="@{tag}"
                            execution="@{execution}"
                            pattern="Valid run, Score is\s*(\S*)"
                            key="score"/>
          <outputStatisticEnd/>
          <outputExecutionResults tag="@{tag}" execution="@{execution}"/>
          <outputExecutionEnd/>
          <displayExecutionResults tag="@{tag}" execution="@{execution}"/>
        </sequential>
      </forEach>

      <outputMultiExecutionTestEnd/>
    </sequential>
  </macrodef>


</project>
